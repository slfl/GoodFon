<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HtmlAgilityPack.1.4.6.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:HtmlAgilityPack.Fakes.ShimCrc32">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.Crc32</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimCrc32.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimCrc32.#ctor(HtmlAgilityPack.Crc32)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimCrc32.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimCrc32.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.AddToCRC32Int32">
            <summary>Задает оболочка совместимости Crc32.AddToCRC32(Int32 c)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.AddToCRC32UInt16">
            <summary>Задает оболочка совместимости Crc32.AddToCRC32(UInt16 c)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.CRC32BytesByteArray">
            <summary>Задает оболочка совместимости Crc32.CRC32Bytes(Byte[] bytes)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.CRC32StringString">
            <summary>Задает оболочка совместимости Crc32.CRC32String(String text)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.CheckSumGet">
            <summary>Задает оболочка совместимости Crc32.get_CheckSum()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.CheckSumSetUInt32">
            <summary>Задает оболочка совместимости Crc32.set_CheckSum(UInt32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.Constructor">
            <summary>Задает оболочка совместимости Crc32.Crc32()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.StaticConstructor">
            <summary>Задает оболочка совместимости Crc32.Crc32()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.UPDC32ByteUInt32">
            <summary>Задает оболочка совместимости Crc32.UPDC32(Byte octet, UInt32 crc)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimCrc32.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.AllInstances.AddToCRC32Int32">
            <summary>Задает оболочка совместимости Crc32.AddToCRC32(Int32 c)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.AllInstances.AddToCRC32UInt16">
            <summary>Задает оболочка совместимости Crc32.AddToCRC32(UInt16 c)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.AllInstances.CheckSumGet">
            <summary>Задает оболочка совместимости Crc32.get_CheckSum()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimCrc32.AllInstances.CheckSumSetUInt32">
            <summary>Задает оболочка совместимости Crc32.set_CheckSum(UInt32 value)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlAttribute">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlAttribute</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttribute.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttribute.#ctor(HtmlAgilityPack.HtmlAttribute)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttribute.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttribute.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttribute.Bind(System.IComparable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.Clone">
            <summary>Задает оболочка совместимости HtmlAttribute.Clone()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.CompareToObject">
            <summary>Задает оболочка совместимости HtmlAttribute.CompareTo(Object obj)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.ConstructorHtmlDocument">
            <summary>Задает оболочка совместимости HtmlAttribute.HtmlAttribute(HtmlDocument ownerdocument)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.GetRelativeXpath">
            <summary>Задает оболочка совместимости HtmlAttribute.GetRelativeXpath()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.LineGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_Line()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.LinePositionGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_LinePosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.LineSetInt32">
            <summary>Задает оболочка совместимости HtmlAttribute.set_Line(Int32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.NameGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_Name()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.NameSetString">
            <summary>Задает оболочка совместимости HtmlAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.OriginalNameGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_OriginalName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.OwnerDocumentGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_OwnerDocument()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.OwnerNodeGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_OwnerNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.QuoteTypeGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_QuoteType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.QuoteTypeSetAttributeValueQuote">
            <summary>Задает оболочка совместимости HtmlAttribute.set_QuoteType(AttributeValueQuote value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.Remove">
            <summary>Задает оболочка совместимости HtmlAttribute.Remove()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.StreamPositionGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_StreamPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.ValueGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_Value()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.ValueSetString">
            <summary>Задает оболочка совместимости HtmlAttribute.set_Value(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.XPathGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_XPath()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.XmlNameGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_XmlName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.XmlValueGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_XmlValue()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.Clone">
            <summary>Задает оболочка совместимости HtmlAttribute.Clone()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.CompareToObject">
            <summary>Задает оболочка совместимости HtmlAttribute.CompareTo(Object obj)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.GetRelativeXpath">
            <summary>Задает оболочка совместимости HtmlAttribute.GetRelativeXpath()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.LineGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_Line()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.LinePositionGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_LinePosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.LineSetInt32">
            <summary>Задает оболочка совместимости HtmlAttribute.set_Line(Int32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.NameGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_Name()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.NameSetString">
            <summary>Задает оболочка совместимости HtmlAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.OriginalNameGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_OriginalName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.OwnerDocumentGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_OwnerDocument()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.OwnerNodeGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_OwnerNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.QuoteTypeGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_QuoteType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.QuoteTypeSetAttributeValueQuote">
            <summary>Задает оболочка совместимости HtmlAttribute.set_QuoteType(AttributeValueQuote value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.Remove">
            <summary>Задает оболочка совместимости HtmlAttribute.Remove()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.StreamPositionGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_StreamPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.ValueGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_Value()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.ValueSetString">
            <summary>Задает оболочка совместимости HtmlAttribute.set_Value(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.XPathGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_XPath()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.XmlNameGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_XmlName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttribute.AllInstances.XmlValueGet">
            <summary>Задает оболочка совместимости HtmlAttribute.get_XmlValue()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlAttributeCollection</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.#ctor(HtmlAgilityPack.HtmlAttributeCollection)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.Bind(System.Collections.Generic.ICollection{HtmlAgilityPack.HtmlAttribute})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.Bind(System.Collections.Generic.IEnumerable{HtmlAgilityPack.HtmlAttribute})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.Bind(System.Collections.Generic.IList{HtmlAgilityPack.HtmlAttribute})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AddHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Add(HtmlAttribute item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AddStringString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Add(String name, String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AppendHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Append(HtmlAttribute newAttribute)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AppendString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Append(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AppendStringString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Append(String name, String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AttributesWithNameString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.AttributesWithName(String attributeName)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.Clear">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Clear()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.ConstructorHtmlNode">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.HtmlAttributeCollection(HtmlNode ownernode)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.ContainsHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Contains(HtmlAttribute item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.ContainsString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Contains(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.CopyToHtmlAttributeArrayInt32">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.CopyTo(HtmlAttribute[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.CountGet">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.get_Count()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.GetAttributeIndexHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.GetAttributeIndex(HtmlAttribute attribute)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.GetAttributeIndexString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.GetAttributeIndex(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.IndexOfHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.IndexOf(HtmlAttribute item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.InsertInt32HtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Insert(Int32 index, HtmlAttribute item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.IsReadOnlyGet">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.ItemGetInt32">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.ItemGetString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.get_Item(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.ItemSetInt32HtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.set_Item(Int32 index, HtmlAttribute value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.ItemSetStringHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.set_Item(String name, HtmlAttribute value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.PrependHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Prepend(HtmlAttribute newAttribute)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.Remove">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Remove()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.RemoveAll">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.RemoveAll()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.RemoveAtInt32">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.RemoveHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Remove(HtmlAttribute attribute)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.RemoveString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Remove(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.SystemCollectionsGenericICollectionHtmlAgilityPackHtmlAttributeClear">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.System.Collections.Generic.ICollection&lt;HtmlAgilityPack.HtmlAttribute&gt;.Clear()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.SystemCollectionsGenericICollectionHtmlAgilityPackHtmlAttributeRemoveHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.System.Collections.Generic.ICollection&lt;HtmlAgilityPack.HtmlAttribute&gt;.Remove(HtmlAttribute item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.SystemCollectionsGenericIEnumerableHtmlAgilityPackHtmlAttributeGetEnumerator">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.System.Collections.Generic.IEnumerable&lt;HtmlAgilityPack.HtmlAttribute&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.AddHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Add(HtmlAttribute item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.AddStringString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Add(String name, String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.AppendHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Append(HtmlAttribute newAttribute)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.AppendString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Append(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.AppendStringString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Append(String name, String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.AttributesWithNameString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.AttributesWithName(String attributeName)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.Clear">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Clear()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.ContainsHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Contains(HtmlAttribute item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.ContainsString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Contains(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.CopyToHtmlAttributeArrayInt32">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.CopyTo(HtmlAttribute[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.CountGet">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.get_Count()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.GetAttributeIndexHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.GetAttributeIndex(HtmlAttribute attribute)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.GetAttributeIndexString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.GetAttributeIndex(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.IndexOfHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.IndexOf(HtmlAttribute item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.InsertInt32HtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Insert(Int32 index, HtmlAttribute item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.IsReadOnlyGet">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.ItemGetInt32">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.ItemGetString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.get_Item(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.ItemSetInt32HtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.set_Item(Int32 index, HtmlAttribute value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.ItemSetStringHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.set_Item(String name, HtmlAttribute value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.PrependHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Prepend(HtmlAttribute newAttribute)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.Remove">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Remove()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.RemoveAll">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.RemoveAll()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.RemoveAtInt32">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.RemoveHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Remove(HtmlAttribute attribute)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.RemoveString">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.Remove(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.SystemCollectionsGenericICollectionHtmlAgilityPackHtmlAttributeClear">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.System.Collections.Generic.ICollection&lt;HtmlAgilityPack.HtmlAttribute&gt;.Clear()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.SystemCollectionsGenericICollectionHtmlAgilityPackHtmlAttributeRemoveHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.System.Collections.Generic.ICollection&lt;HtmlAgilityPack.HtmlAttribute&gt;.Remove(HtmlAttribute item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.SystemCollectionsGenericIEnumerableHtmlAgilityPackHtmlAttributeGetEnumerator">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.System.Collections.Generic.IEnumerable&lt;HtmlAgilityPack.HtmlAttribute&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlAttributeCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости HtmlAttributeCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlCommentNode">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlCommentNode</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.#ctor(HtmlAgilityPack.HtmlCommentNode)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.CommentGet">
            <summary>Задает оболочка совместимости HtmlCommentNode.get_Comment()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.CommentSetString">
            <summary>Задает оболочка совместимости HtmlCommentNode.set_Comment(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.ConstructorHtmlDocumentInt32">
            <summary>Задает оболочка совместимости HtmlCommentNode.HtmlCommentNode(HtmlDocument ownerdocument, Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.InnerHtmlGet">
            <summary>Задает оболочка совместимости HtmlCommentNode.get_InnerHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.InnerHtmlSetString">
            <summary>Задает оболочка совместимости HtmlCommentNode.set_InnerHtml(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.OuterHtmlGet">
            <summary>Задает оболочка совместимости HtmlCommentNode.get_OuterHtml()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.AllInstances.CommentGet">
            <summary>Задает оболочка совместимости HtmlCommentNode.get_Comment()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.AllInstances.CommentSetString">
            <summary>Задает оболочка совместимости HtmlCommentNode.set_Comment(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.AllInstances.InnerHtmlGet">
            <summary>Задает оболочка совместимости HtmlCommentNode.get_InnerHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.AllInstances.InnerHtmlSetString">
            <summary>Задает оболочка совместимости HtmlCommentNode.set_InnerHtml(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlCommentNode.AllInstances.OuterHtmlGet">
            <summary>Задает оболочка совместимости HtmlCommentNode.get_OuterHtml()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlDocument">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlDocument</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlDocument.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlDocument.#ctor(HtmlAgilityPack.HtmlDocument)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlDocument.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlDocument.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlDocument.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AddErrorHtmlParseErrorCodeInt32Int32Int32StringString">
            <summary>Задает оболочка совместимости HtmlDocument.AddError(HtmlParseErrorCode code, Int32 line, Int32 linePosition, Int32 streamPosition, String sourceText, String reason)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CheckSumGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_CheckSum()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CloseCurrentNode">
            <summary>Задает оболочка совместимости HtmlDocument.CloseCurrentNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.Constructor">
            <summary>Задает оболочка совместимости HtmlDocument.HtmlDocument()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateAttribute">
            <summary>Задает оболочка совместимости HtmlDocument.CreateAttribute()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateAttributeString">
            <summary>Задает оболочка совместимости HtmlDocument.CreateAttribute(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateAttributeStringString">
            <summary>Задает оболочка совместимости HtmlDocument.CreateAttribute(String name, String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateComment">
            <summary>Задает оболочка совместимости HtmlDocument.CreateComment()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateCommentString">
            <summary>Задает оболочка совместимости HtmlDocument.CreateComment(String comment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateElementString">
            <summary>Задает оболочка совместимости HtmlDocument.CreateElement(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateNavigator">
            <summary>Задает оболочка совместимости HtmlDocument.CreateNavigator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateNodeHtmlNodeType">
            <summary>Задает оболочка совместимости HtmlDocument.CreateNode(HtmlNodeType type)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateNodeHtmlNodeTypeInt32">
            <summary>Задает оболочка совместимости HtmlDocument.CreateNode(HtmlNodeType type, Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateTextNode">
            <summary>Задает оболочка совместимости HtmlDocument.CreateTextNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CreateTextNodeString">
            <summary>Задает оболочка совместимости HtmlDocument.CreateTextNode(String text)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.CurrentNodeName">
            <summary>Задает оболочка совместимости HtmlDocument.CurrentNodeName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.DeclaredEncodingGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_DeclaredEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.DecrementPosition">
            <summary>Задает оболочка совместимости HtmlDocument.DecrementPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.DetectEncodingAndLoadString">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncodingAndLoad(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.DetectEncodingAndLoadStringBoolean">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncodingAndLoad(String path, Boolean detectEncoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.DetectEncodingHtmlString">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncodingHtml(String html)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.DetectEncodingStream">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncoding(Stream stream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.DetectEncodingString">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncoding(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.DetectEncodingTextReader">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncoding(TextReader reader)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.DocumentNodeGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_DocumentNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.EncodingGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_Encoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.FindResetterNodeHtmlNodeString">
            <summary>Задает оболочка совместимости HtmlDocument.FindResetterNode(HtmlNode node, String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.FindResetterNodesHtmlNodeStringArray">
            <summary>Задает оболочка совместимости HtmlDocument.FindResetterNodes(HtmlNode node, String[] names)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.FixNestedTagStringStringArray">
            <summary>Задает оболочка совместимости HtmlDocument.FixNestedTag(String name, String[] resetters)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.FixNestedTags">
            <summary>Задает оболочка совместимости HtmlDocument.FixNestedTags()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.GetElementbyIdString">
            <summary>Задает оболочка совместимости HtmlDocument.GetElementbyId(String id)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.GetOutEncoding">
            <summary>Задает оболочка совместимости HtmlDocument.GetOutEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.GetResettersString">
            <summary>Задает оболочка совместимости HtmlDocument.GetResetters(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.GetXmlDeclaration">
            <summary>Задает оболочка совместимости HtmlDocument.GetXmlDeclaration()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.GetXmlNameString">
            <summary>Задает оболочка совместимости HtmlDocument.GetXmlName(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.HtmlEncodeString">
            <summary>Задает оболочка совместимости HtmlDocument.HtmlEncode(String html)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.IncrementPosition">
            <summary>Задает оболочка совместимости HtmlDocument.IncrementPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.IsWhiteSpaceInt32">
            <summary>Задает оболочка совместимости HtmlDocument.IsWhiteSpace(Int32 c)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadHtmlString">
            <summary>Задает оболочка совместимости HtmlDocument.LoadHtml(String html)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadStream">
            <summary>Задает оболочка совместимости HtmlDocument.Load(Stream stream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadStreamBoolean">
            <summary>Задает оболочка совместимости HtmlDocument.Load(Stream stream, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadStreamEncoding">
            <summary>Задает оболочка совместимости HtmlDocument.Load(Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadStreamEncodingBoolean">
            <summary>Задает оболочка совместимости HtmlDocument.Load(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadStreamEncodingBooleanInt32">
            <summary>Задает оболочка совместимости HtmlDocument.Load(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 buffersize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadString">
            <summary>Задает оболочка совместимости HtmlDocument.Load(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadStringBoolean">
            <summary>Задает оболочка совместимости HtmlDocument.Load(String path, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadStringEncoding">
            <summary>Задает оболочка совместимости HtmlDocument.Load(String path, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadStringEncodingBoolean">
            <summary>Задает оболочка совместимости HtmlDocument.Load(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadStringEncodingBooleanInt32">
            <summary>Задает оболочка совместимости HtmlDocument.Load(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 buffersize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.LoadTextReader">
            <summary>Задает оболочка совместимости HtmlDocument.Load(TextReader reader)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.NewCheck">
            <summary>Задает оболочка совместимости HtmlDocument.NewCheck()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.Parse">
            <summary>Задает оболочка совместимости HtmlDocument.Parse()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.ParseErrorsGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_ParseErrors()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.PushAttributeNameEndInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushAttributeNameEnd(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.PushAttributeNameStartInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushAttributeNameStart(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.PushAttributeValueEndInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushAttributeValueEnd(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.PushAttributeValueStartInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushAttributeValueStart(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.PushAttributeValueStartInt32Int32">
            <summary>Задает оболочка совместимости HtmlDocument.PushAttributeValueStart(Int32 index, Int32 quote)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.PushNodeEndInt32Boolean">
            <summary>Задает оболочка совместимости HtmlDocument.PushNodeEnd(Int32 index, Boolean close)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.PushNodeNameEndInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushNodeNameEnd(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.PushNodeNameStartBooleanInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushNodeNameStart(Boolean starttag, Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.PushNodeStartHtmlNodeTypeInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushNodeStart(HtmlNodeType type, Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.ReadDocumentEncodingHtmlNode">
            <summary>Задает оболочка совместимости HtmlDocument.ReadDocumentEncoding(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.RemainderGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_Remainder()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.RemainderOffsetGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_RemainderOffset()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.SaveStream">
            <summary>Задает оболочка совместимости HtmlDocument.Save(Stream outStream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.SaveStreamEncoding">
            <summary>Задает оболочка совместимости HtmlDocument.Save(Stream outStream, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.SaveStreamWriter">
            <summary>Задает оболочка совместимости HtmlDocument.Save(StreamWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.SaveString">
            <summary>Задает оболочка совместимости HtmlDocument.Save(String filename)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.SaveStringEncoding">
            <summary>Задает оболочка совместимости HtmlDocument.Save(String filename, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.SaveTextWriter">
            <summary>Задает оболочка совместимости HtmlDocument.Save(TextWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.SaveXmlWriter">
            <summary>Задает оболочка совместимости HtmlDocument.Save(XmlWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.SetIdForNodeHtmlNodeString">
            <summary>Задает оболочка совместимости HtmlDocument.SetIdForNode(HtmlNode node, String id)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.StaticConstructor">
            <summary>Задает оболочка совместимости HtmlDocument.HtmlDocument()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.StreamEncodingGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_StreamEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.UpdateLastParentNode">
            <summary>Задает оболочка совместимости HtmlDocument.UpdateLastParentNode()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.AddErrorHtmlParseErrorCodeInt32Int32Int32StringString">
            <summary>Задает оболочка совместимости HtmlDocument.AddError(HtmlParseErrorCode code, Int32 line, Int32 linePosition, Int32 streamPosition, String sourceText, String reason)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CheckSumGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_CheckSum()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CloseCurrentNode">
            <summary>Задает оболочка совместимости HtmlDocument.CloseCurrentNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateAttribute">
            <summary>Задает оболочка совместимости HtmlDocument.CreateAttribute()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateAttributeString">
            <summary>Задает оболочка совместимости HtmlDocument.CreateAttribute(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateAttributeStringString">
            <summary>Задает оболочка совместимости HtmlDocument.CreateAttribute(String name, String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateComment">
            <summary>Задает оболочка совместимости HtmlDocument.CreateComment()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateCommentString">
            <summary>Задает оболочка совместимости HtmlDocument.CreateComment(String comment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateElementString">
            <summary>Задает оболочка совместимости HtmlDocument.CreateElement(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateNavigator">
            <summary>Задает оболочка совместимости HtmlDocument.CreateNavigator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateNodeHtmlNodeType">
            <summary>Задает оболочка совместимости HtmlDocument.CreateNode(HtmlNodeType type)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateNodeHtmlNodeTypeInt32">
            <summary>Задает оболочка совместимости HtmlDocument.CreateNode(HtmlNodeType type, Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateTextNode">
            <summary>Задает оболочка совместимости HtmlDocument.CreateTextNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CreateTextNodeString">
            <summary>Задает оболочка совместимости HtmlDocument.CreateTextNode(String text)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.CurrentNodeName">
            <summary>Задает оболочка совместимости HtmlDocument.CurrentNodeName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.DeclaredEncodingGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_DeclaredEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.DecrementPosition">
            <summary>Задает оболочка совместимости HtmlDocument.DecrementPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.DetectEncodingAndLoadString">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncodingAndLoad(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.DetectEncodingAndLoadStringBoolean">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncodingAndLoad(String path, Boolean detectEncoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.DetectEncodingHtmlString">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncodingHtml(String html)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.DetectEncodingStream">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncoding(Stream stream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.DetectEncodingString">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncoding(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.DetectEncodingTextReader">
            <summary>Задает оболочка совместимости HtmlDocument.DetectEncoding(TextReader reader)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.DocumentNodeGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_DocumentNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.EncodingGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_Encoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.FindResetterNodeHtmlNodeString">
            <summary>Задает оболочка совместимости HtmlDocument.FindResetterNode(HtmlNode node, String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.FindResetterNodesHtmlNodeStringArray">
            <summary>Задает оболочка совместимости HtmlDocument.FindResetterNodes(HtmlNode node, String[] names)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.FixNestedTagStringStringArray">
            <summary>Задает оболочка совместимости HtmlDocument.FixNestedTag(String name, String[] resetters)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.FixNestedTags">
            <summary>Задает оболочка совместимости HtmlDocument.FixNestedTags()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.GetElementbyIdString">
            <summary>Задает оболочка совместимости HtmlDocument.GetElementbyId(String id)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.GetOutEncoding">
            <summary>Задает оболочка совместимости HtmlDocument.GetOutEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.GetResettersString">
            <summary>Задает оболочка совместимости HtmlDocument.GetResetters(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.GetXmlDeclaration">
            <summary>Задает оболочка совместимости HtmlDocument.GetXmlDeclaration()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.IncrementPosition">
            <summary>Задает оболочка совместимости HtmlDocument.IncrementPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadHtmlString">
            <summary>Задает оболочка совместимости HtmlDocument.LoadHtml(String html)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadStream">
            <summary>Задает оболочка совместимости HtmlDocument.Load(Stream stream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadStreamBoolean">
            <summary>Задает оболочка совместимости HtmlDocument.Load(Stream stream, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadStreamEncoding">
            <summary>Задает оболочка совместимости HtmlDocument.Load(Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadStreamEncodingBoolean">
            <summary>Задает оболочка совместимости HtmlDocument.Load(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadStreamEncodingBooleanInt32">
            <summary>Задает оболочка совместимости HtmlDocument.Load(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 buffersize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadString">
            <summary>Задает оболочка совместимости HtmlDocument.Load(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadStringBoolean">
            <summary>Задает оболочка совместимости HtmlDocument.Load(String path, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadStringEncoding">
            <summary>Задает оболочка совместимости HtmlDocument.Load(String path, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadStringEncodingBoolean">
            <summary>Задает оболочка совместимости HtmlDocument.Load(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadStringEncodingBooleanInt32">
            <summary>Задает оболочка совместимости HtmlDocument.Load(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 buffersize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.LoadTextReader">
            <summary>Задает оболочка совместимости HtmlDocument.Load(TextReader reader)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.NewCheck">
            <summary>Задает оболочка совместимости HtmlDocument.NewCheck()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.Parse">
            <summary>Задает оболочка совместимости HtmlDocument.Parse()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.ParseErrorsGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_ParseErrors()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.PushAttributeNameEndInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushAttributeNameEnd(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.PushAttributeNameStartInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushAttributeNameStart(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.PushAttributeValueEndInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushAttributeValueEnd(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.PushAttributeValueStartInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushAttributeValueStart(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.PushAttributeValueStartInt32Int32">
            <summary>Задает оболочка совместимости HtmlDocument.PushAttributeValueStart(Int32 index, Int32 quote)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.PushNodeEndInt32Boolean">
            <summary>Задает оболочка совместимости HtmlDocument.PushNodeEnd(Int32 index, Boolean close)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.PushNodeNameEndInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushNodeNameEnd(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.PushNodeNameStartBooleanInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushNodeNameStart(Boolean starttag, Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.PushNodeStartHtmlNodeTypeInt32">
            <summary>Задает оболочка совместимости HtmlDocument.PushNodeStart(HtmlNodeType type, Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.ReadDocumentEncodingHtmlNode">
            <summary>Задает оболочка совместимости HtmlDocument.ReadDocumentEncoding(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.RemainderGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_Remainder()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.RemainderOffsetGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_RemainderOffset()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.SaveStream">
            <summary>Задает оболочка совместимости HtmlDocument.Save(Stream outStream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.SaveStreamEncoding">
            <summary>Задает оболочка совместимости HtmlDocument.Save(Stream outStream, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.SaveStreamWriter">
            <summary>Задает оболочка совместимости HtmlDocument.Save(StreamWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.SaveString">
            <summary>Задает оболочка совместимости HtmlDocument.Save(String filename)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.SaveStringEncoding">
            <summary>Задает оболочка совместимости HtmlDocument.Save(String filename, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.SaveTextWriter">
            <summary>Задает оболочка совместимости HtmlDocument.Save(TextWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.SaveXmlWriter">
            <summary>Задает оболочка совместимости HtmlDocument.Save(XmlWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.SetIdForNodeHtmlNodeString">
            <summary>Задает оболочка совместимости HtmlDocument.SetIdForNode(HtmlNode node, String id)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.StreamEncodingGet">
            <summary>Задает оболочка совместимости HtmlDocument.get_StreamEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlDocument.AllInstances.UpdateLastParentNode">
            <summary>Задает оболочка совместимости HtmlDocument.UpdateLastParentNode()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlEntity">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlEntity</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlEntity.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlEntity.#ctor(HtmlAgilityPack.HtmlEntity)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlEntity.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlEntity.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.Constructor">
            <summary>Задает оболочка совместимости HtmlEntity.HtmlEntity()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.DeEntitizeString">
            <summary>Задает оболочка совместимости HtmlEntity.DeEntitize(String text)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.EntitizeHtmlAttributeCollection">
            <summary>Задает оболочка совместимости HtmlEntity.Entitize(HtmlAttributeCollection collection)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.EntitizeHtmlNode">
            <summary>Задает оболочка совместимости HtmlEntity.Entitize(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.EntitizeHtmlNodeCollection">
            <summary>Задает оболочка совместимости HtmlEntity.Entitize(HtmlNodeCollection collection)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.EntitizeString">
            <summary>Задает оболочка совместимости HtmlEntity.Entitize(String text)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.EntitizeStringBoolean">
            <summary>Задает оболочка совместимости HtmlEntity.Entitize(String text, Boolean useNames)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.EntitizeStringBooleanBoolean">
            <summary>Задает оболочка совместимости HtmlEntity.Entitize(String text, Boolean useNames, Boolean entitizeQuotAmpAndLtGt)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.EntityNameGet">
            <summary>Задает оболочка совместимости HtmlEntity.get_EntityName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.EntityValueGet">
            <summary>Задает оболочка совместимости HtmlEntity.get_EntityValue()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlEntity.StaticConstructor">
            <summary>Задает оболочка совместимости HtmlEntity.HtmlEntity()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlEntity.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlNode">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlNode</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNode.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNode.#ctor(HtmlAgilityPack.HtmlNode)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNode.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNode.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNode.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.Ancestors">
            <summary>Задает оболочка совместимости HtmlNode.Ancestors()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AncestorsAndSelf">
            <summary>Задает оболочка совместимости HtmlNode.AncestorsAndSelf()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AncestorsAndSelfString">
            <summary>Задает оболочка совместимости HtmlNode.AncestorsAndSelf(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AncestorsString">
            <summary>Задает оболочка совместимости HtmlNode.Ancestors(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AppendChildHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.AppendChild(HtmlNode newChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AppendChildrenHtmlNodeCollection">
            <summary>Задает оболочка совместимости HtmlNode.AppendChildren(HtmlNodeCollection newChildren)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AttributesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_Attributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AttributesSetHtmlAttributeCollection">
            <summary>Задает оболочка совместимости HtmlNode.set_Attributes(HtmlAttributeCollection value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.CanOverlapElementString">
            <summary>Задает оболочка совместимости HtmlNode.CanOverlapElement(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ChildAttributesString">
            <summary>Задает оболочка совместимости HtmlNode.ChildAttributes(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ChildNodesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_ChildNodes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ChildNodesSetHtmlNodeCollection">
            <summary>Задает оболочка совместимости HtmlNode.set_ChildNodes(HtmlNodeCollection value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.Clone">
            <summary>Задает оболочка совместимости HtmlNode.Clone()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.CloneNodeBoolean">
            <summary>Задает оболочка совместимости HtmlNode.CloneNode(Boolean deep)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.CloneNodeString">
            <summary>Задает оболочка совместимости HtmlNode.CloneNode(String newName)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.CloneNodeStringBoolean">
            <summary>Задает оболочка совместимости HtmlNode.CloneNode(String newName, Boolean deep)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.CloseNodeHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.CloseNode(HtmlNode endnode)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ClosedGet">
            <summary>Задает оболочка совместимости HtmlNode.get_Closed()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ClosingAttributesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_ClosingAttributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ConstructorHtmlNodeTypeHtmlDocumentInt32">
            <summary>Задает оболочка совместимости HtmlNode.HtmlNode(HtmlNodeType type, HtmlDocument ownerdocument, Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.CopyFromHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.CopyFrom(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.CopyFromHtmlNodeBoolean">
            <summary>Задает оболочка совместимости HtmlNode.CopyFrom(HtmlNode node, Boolean deep)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.CreateNavigator">
            <summary>Задает оболочка совместимости HtmlNode.CreateNavigator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.CreateNodeString">
            <summary>Задает оболочка совместимости HtmlNode.CreateNode(String html)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.CreateRootNavigator">
            <summary>Задает оболочка совместимости HtmlNode.CreateRootNavigator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.DescendantNodes">
            <summary>Задает оболочка совместимости HtmlNode.DescendantNodes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.DescendantNodesAndSelf">
            <summary>Задает оболочка совместимости HtmlNode.DescendantNodesAndSelf()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.Descendants">
            <summary>Задает оболочка совместимости HtmlNode.Descendants()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.DescendantsAndSelf">
            <summary>Задает оболочка совместимости HtmlNode.DescendantsAndSelf()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.DescendantsAndSelfString">
            <summary>Задает оболочка совместимости HtmlNode.DescendantsAndSelf(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.DescendantsString">
            <summary>Задает оболочка совместимости HtmlNode.Descendants(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ElementString">
            <summary>Задает оболочка совместимости HtmlNode.Element(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ElementsString">
            <summary>Задает оболочка совместимости HtmlNode.Elements(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.EndNodeGet">
            <summary>Задает оболочка совместимости HtmlNode.get_EndNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.FirstChildGet">
            <summary>Задает оболочка совместимости HtmlNode.get_FirstChild()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.GetAttributeValueStringBoolean">
            <summary>Задает оболочка совместимости HtmlNode.GetAttributeValue(String name, Boolean def)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.GetAttributeValueStringInt32">
            <summary>Задает оболочка совместимости HtmlNode.GetAttributeValue(String name, Int32 def)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.GetAttributeValueStringString">
            <summary>Задает оболочка совместимости HtmlNode.GetAttributeValue(String name, String def)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.GetId">
            <summary>Задает оболочка совместимости HtmlNode.GetId()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.GetRelativeXpath">
            <summary>Задает оболочка совместимости HtmlNode.GetRelativeXpath()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.GetXmlCommentHtmlCommentNode">
            <summary>Задает оболочка совместимости HtmlNode.GetXmlComment(HtmlCommentNode comment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.HasAttributesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_HasAttributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.HasChildNodesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_HasChildNodes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.HasClosingAttributesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_HasClosingAttributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.IdGet">
            <summary>Задает оболочка совместимости HtmlNode.get_Id()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.IdSetString">
            <summary>Задает оболочка совместимости HtmlNode.set_Id(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.InnerHtmlGet">
            <summary>Задает оболочка совместимости HtmlNode.get_InnerHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.InnerHtmlSetString">
            <summary>Задает оболочка совместимости HtmlNode.set_InnerHtml(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.InnerTextGet">
            <summary>Задает оболочка совместимости HtmlNode.get_InnerText()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.InsertAfterHtmlNodeHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.InsertAfter(HtmlNode newChild, HtmlNode refChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.InsertBeforeHtmlNodeHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.InsertBefore(HtmlNode newChild, HtmlNode refChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.IsCDataElementString">
            <summary>Задает оболочка совместимости HtmlNode.IsCDataElement(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.IsClosedElementString">
            <summary>Задает оболочка совместимости HtmlNode.IsClosedElement(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.IsEmptyElementString">
            <summary>Задает оболочка совместимости HtmlNode.IsEmptyElement(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.IsOverlappedClosingElementString">
            <summary>Задает оболочка совместимости HtmlNode.IsOverlappedClosingElement(String text)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.LastChildGet">
            <summary>Задает оболочка совместимости HtmlNode.get_LastChild()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.LineGet">
            <summary>Задает оболочка совместимости HtmlNode.get_Line()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.LinePositionGet">
            <summary>Задает оболочка совместимости HtmlNode.get_LinePosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.LinePositionSetInt32">
            <summary>Задает оболочка совместимости HtmlNode.set_LinePosition(Int32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.LineSetInt32">
            <summary>Задает оболочка совместимости HtmlNode.set_Line(Int32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.NameGet">
            <summary>Задает оболочка совместимости HtmlNode.get_Name()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.NameSetString">
            <summary>Задает оболочка совместимости HtmlNode.set_Name(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.NextSiblingGet">
            <summary>Задает оболочка совместимости HtmlNode.get_NextSibling()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.NextSiblingSetHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.set_NextSibling(HtmlNode value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.NodeTypeGet">
            <summary>Задает оболочка совместимости HtmlNode.get_NodeType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.NodeTypeSetHtmlNodeType">
            <summary>Задает оболочка совместимости HtmlNode.set_NodeType(HtmlNodeType value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.OriginalNameGet">
            <summary>Задает оболочка совместимости HtmlNode.get_OriginalName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.OuterHtmlGet">
            <summary>Задает оболочка совместимости HtmlNode.get_OuterHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.OwnerDocumentGet">
            <summary>Задает оболочка совместимости HtmlNode.get_OwnerDocument()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.OwnerDocumentSetHtmlDocument">
            <summary>Задает оболочка совместимости HtmlNode.set_OwnerDocument(HtmlDocument value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ParentNodeGet">
            <summary>Задает оболочка совместимости HtmlNode.get_ParentNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ParentNodeSetHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.set_ParentNode(HtmlNode value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.PrependChildHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.PrependChild(HtmlNode newChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.PrependChildrenHtmlNodeCollection">
            <summary>Задает оболочка совместимости HtmlNode.PrependChildren(HtmlNodeCollection newChildren)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.PreviousSiblingGet">
            <summary>Задает оболочка совместимости HtmlNode.get_PreviousSibling()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.PreviousSiblingSetHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.set_PreviousSibling(HtmlNode value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.Remove">
            <summary>Задает оболочка совместимости HtmlNode.Remove()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.RemoveAll">
            <summary>Задает оболочка совместимости HtmlNode.RemoveAll()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.RemoveAllChildren">
            <summary>Задает оболочка совместимости HtmlNode.RemoveAllChildren()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.RemoveChildHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.RemoveChild(HtmlNode oldChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.RemoveChildHtmlNodeBoolean">
            <summary>Задает оболочка совместимости HtmlNode.RemoveChild(HtmlNode oldChild, Boolean keepGrandChildren)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.ReplaceChildHtmlNodeHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.ReplaceChild(HtmlNode newChild, HtmlNode oldChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.SelectNodesString">
            <summary>Задает оболочка совместимости HtmlNode.SelectNodes(String xpath)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.SelectSingleNodeString">
            <summary>Задает оболочка совместимости HtmlNode.SelectSingleNode(String xpath)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.SetAttributeValueStringString">
            <summary>Задает оболочка совместимости HtmlNode.SetAttributeValue(String name, String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.SetIdString">
            <summary>Задает оболочка совместимости HtmlNode.SetId(String id)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.StaticConstructor">
            <summary>Задает оболочка совместимости HtmlNode.HtmlNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.StreamPositionGet">
            <summary>Задает оболочка совместимости HtmlNode.get_StreamPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.WriteAttributeTextWriterHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlNode.WriteAttribute(TextWriter outText, HtmlAttribute att)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.WriteAttributesTextWriterBoolean">
            <summary>Задает оболочка совместимости HtmlNode.WriteAttributes(TextWriter outText, Boolean closing)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.WriteAttributesXmlWriterHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.WriteAttributes(XmlWriter writer, HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.WriteContentTo">
            <summary>Задает оболочка совместимости HtmlNode.WriteContentTo()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.WriteContentToTextWriter">
            <summary>Задает оболочка совместимости HtmlNode.WriteContentTo(TextWriter outText)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.WriteTo">
            <summary>Задает оболочка совместимости HtmlNode.WriteTo()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.WriteToTextWriter">
            <summary>Задает оболочка совместимости HtmlNode.WriteTo(TextWriter outText)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.WriteToXmlWriter">
            <summary>Задает оболочка совместимости HtmlNode.WriteTo(XmlWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.XPathGet">
            <summary>Задает оболочка совместимости HtmlNode.get_XPath()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.Ancestors">
            <summary>Задает оболочка совместимости HtmlNode.Ancestors()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.AncestorsAndSelf">
            <summary>Задает оболочка совместимости HtmlNode.AncestorsAndSelf()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.AncestorsAndSelfString">
            <summary>Задает оболочка совместимости HtmlNode.AncestorsAndSelf(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.AncestorsString">
            <summary>Задает оболочка совместимости HtmlNode.Ancestors(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.AppendChildHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.AppendChild(HtmlNode newChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.AppendChildrenHtmlNodeCollection">
            <summary>Задает оболочка совместимости HtmlNode.AppendChildren(HtmlNodeCollection newChildren)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.AttributesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_Attributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.AttributesSetHtmlAttributeCollection">
            <summary>Задает оболочка совместимости HtmlNode.set_Attributes(HtmlAttributeCollection value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.ChildAttributesString">
            <summary>Задает оболочка совместимости HtmlNode.ChildAttributes(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.ChildNodesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_ChildNodes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.ChildNodesSetHtmlNodeCollection">
            <summary>Задает оболочка совместимости HtmlNode.set_ChildNodes(HtmlNodeCollection value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.Clone">
            <summary>Задает оболочка совместимости HtmlNode.Clone()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.CloneNodeBoolean">
            <summary>Задает оболочка совместимости HtmlNode.CloneNode(Boolean deep)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.CloneNodeString">
            <summary>Задает оболочка совместимости HtmlNode.CloneNode(String newName)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.CloneNodeStringBoolean">
            <summary>Задает оболочка совместимости HtmlNode.CloneNode(String newName, Boolean deep)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.CloseNodeHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.CloseNode(HtmlNode endnode)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.ClosedGet">
            <summary>Задает оболочка совместимости HtmlNode.get_Closed()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.ClosingAttributesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_ClosingAttributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.CopyFromHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.CopyFrom(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.CopyFromHtmlNodeBoolean">
            <summary>Задает оболочка совместимости HtmlNode.CopyFrom(HtmlNode node, Boolean deep)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.CreateNavigator">
            <summary>Задает оболочка совместимости HtmlNode.CreateNavigator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.CreateRootNavigator">
            <summary>Задает оболочка совместимости HtmlNode.CreateRootNavigator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.DescendantNodes">
            <summary>Задает оболочка совместимости HtmlNode.DescendantNodes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.DescendantNodesAndSelf">
            <summary>Задает оболочка совместимости HtmlNode.DescendantNodesAndSelf()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.Descendants">
            <summary>Задает оболочка совместимости HtmlNode.Descendants()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.DescendantsAndSelf">
            <summary>Задает оболочка совместимости HtmlNode.DescendantsAndSelf()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.DescendantsAndSelfString">
            <summary>Задает оболочка совместимости HtmlNode.DescendantsAndSelf(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.DescendantsString">
            <summary>Задает оболочка совместимости HtmlNode.Descendants(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.ElementString">
            <summary>Задает оболочка совместимости HtmlNode.Element(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.ElementsString">
            <summary>Задает оболочка совместимости HtmlNode.Elements(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.EndNodeGet">
            <summary>Задает оболочка совместимости HtmlNode.get_EndNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.FirstChildGet">
            <summary>Задает оболочка совместимости HtmlNode.get_FirstChild()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.GetAttributeValueStringBoolean">
            <summary>Задает оболочка совместимости HtmlNode.GetAttributeValue(String name, Boolean def)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.GetAttributeValueStringInt32">
            <summary>Задает оболочка совместимости HtmlNode.GetAttributeValue(String name, Int32 def)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.GetAttributeValueStringString">
            <summary>Задает оболочка совместимости HtmlNode.GetAttributeValue(String name, String def)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.GetId">
            <summary>Задает оболочка совместимости HtmlNode.GetId()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.GetRelativeXpath">
            <summary>Задает оболочка совместимости HtmlNode.GetRelativeXpath()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.HasAttributesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_HasAttributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.HasChildNodesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_HasChildNodes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.HasClosingAttributesGet">
            <summary>Задает оболочка совместимости HtmlNode.get_HasClosingAttributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.IdGet">
            <summary>Задает оболочка совместимости HtmlNode.get_Id()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.IdSetString">
            <summary>Задает оболочка совместимости HtmlNode.set_Id(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.InnerHtmlGet">
            <summary>Задает оболочка совместимости HtmlNode.get_InnerHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.InnerHtmlSetString">
            <summary>Задает оболочка совместимости HtmlNode.set_InnerHtml(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.InnerTextGet">
            <summary>Задает оболочка совместимости HtmlNode.get_InnerText()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.InsertAfterHtmlNodeHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.InsertAfter(HtmlNode newChild, HtmlNode refChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.InsertBeforeHtmlNodeHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.InsertBefore(HtmlNode newChild, HtmlNode refChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.LastChildGet">
            <summary>Задает оболочка совместимости HtmlNode.get_LastChild()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.LineGet">
            <summary>Задает оболочка совместимости HtmlNode.get_Line()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.LinePositionGet">
            <summary>Задает оболочка совместимости HtmlNode.get_LinePosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.LinePositionSetInt32">
            <summary>Задает оболочка совместимости HtmlNode.set_LinePosition(Int32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.LineSetInt32">
            <summary>Задает оболочка совместимости HtmlNode.set_Line(Int32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.NameGet">
            <summary>Задает оболочка совместимости HtmlNode.get_Name()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.NameSetString">
            <summary>Задает оболочка совместимости HtmlNode.set_Name(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.NextSiblingGet">
            <summary>Задает оболочка совместимости HtmlNode.get_NextSibling()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.NextSiblingSetHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.set_NextSibling(HtmlNode value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.NodeTypeGet">
            <summary>Задает оболочка совместимости HtmlNode.get_NodeType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.NodeTypeSetHtmlNodeType">
            <summary>Задает оболочка совместимости HtmlNode.set_NodeType(HtmlNodeType value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.OriginalNameGet">
            <summary>Задает оболочка совместимости HtmlNode.get_OriginalName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.OuterHtmlGet">
            <summary>Задает оболочка совместимости HtmlNode.get_OuterHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.OwnerDocumentGet">
            <summary>Задает оболочка совместимости HtmlNode.get_OwnerDocument()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.OwnerDocumentSetHtmlDocument">
            <summary>Задает оболочка совместимости HtmlNode.set_OwnerDocument(HtmlDocument value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.ParentNodeGet">
            <summary>Задает оболочка совместимости HtmlNode.get_ParentNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.ParentNodeSetHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.set_ParentNode(HtmlNode value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.PrependChildHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.PrependChild(HtmlNode newChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.PrependChildrenHtmlNodeCollection">
            <summary>Задает оболочка совместимости HtmlNode.PrependChildren(HtmlNodeCollection newChildren)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.PreviousSiblingGet">
            <summary>Задает оболочка совместимости HtmlNode.get_PreviousSibling()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.PreviousSiblingSetHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.set_PreviousSibling(HtmlNode value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.Remove">
            <summary>Задает оболочка совместимости HtmlNode.Remove()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.RemoveAll">
            <summary>Задает оболочка совместимости HtmlNode.RemoveAll()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.RemoveAllChildren">
            <summary>Задает оболочка совместимости HtmlNode.RemoveAllChildren()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.RemoveChildHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.RemoveChild(HtmlNode oldChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.RemoveChildHtmlNodeBoolean">
            <summary>Задает оболочка совместимости HtmlNode.RemoveChild(HtmlNode oldChild, Boolean keepGrandChildren)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.ReplaceChildHtmlNodeHtmlNode">
            <summary>Задает оболочка совместимости HtmlNode.ReplaceChild(HtmlNode newChild, HtmlNode oldChild)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.SelectNodesString">
            <summary>Задает оболочка совместимости HtmlNode.SelectNodes(String xpath)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.SelectSingleNodeString">
            <summary>Задает оболочка совместимости HtmlNode.SelectSingleNode(String xpath)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.SetAttributeValueStringString">
            <summary>Задает оболочка совместимости HtmlNode.SetAttributeValue(String name, String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.SetIdString">
            <summary>Задает оболочка совместимости HtmlNode.SetId(String id)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.StreamPositionGet">
            <summary>Задает оболочка совместимости HtmlNode.get_StreamPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.WriteAttributeTextWriterHtmlAttribute">
            <summary>Задает оболочка совместимости HtmlNode.WriteAttribute(TextWriter outText, HtmlAttribute att)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.WriteAttributesTextWriterBoolean">
            <summary>Задает оболочка совместимости HtmlNode.WriteAttributes(TextWriter outText, Boolean closing)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.WriteContentTo">
            <summary>Задает оболочка совместимости HtmlNode.WriteContentTo()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.WriteContentToTextWriter">
            <summary>Задает оболочка совместимости HtmlNode.WriteContentTo(TextWriter outText)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.WriteTo">
            <summary>Задает оболочка совместимости HtmlNode.WriteTo()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.WriteToTextWriter">
            <summary>Задает оболочка совместимости HtmlNode.WriteTo(TextWriter outText)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.WriteToXmlWriter">
            <summary>Задает оболочка совместимости HtmlNode.WriteTo(XmlWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNode.AllInstances.XPathGet">
            <summary>Задает оболочка совместимости HtmlNode.get_XPath()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlNodeCollection</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.#ctor(HtmlAgilityPack.HtmlNodeCollection)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.Bind(System.Collections.Generic.ICollection{HtmlAgilityPack.HtmlNode})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.Bind(System.Collections.Generic.IEnumerable{HtmlAgilityPack.HtmlNode})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.Bind(System.Collections.Generic.IList{HtmlAgilityPack.HtmlNode})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AddHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Add(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AppendHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Append(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.Clear">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Clear()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.ConstructorHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.HtmlNodeCollection(HtmlNode parentnode)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.ContainsHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Contains(HtmlNode item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.CopyToHtmlNodeArrayInt32">
            <summary>Задает оболочка совместимости HtmlNodeCollection.CopyTo(HtmlNode[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.CountGet">
            <summary>Задает оболочка совместимости HtmlNodeCollection.get_Count()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.Descendants">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Descendants()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.DescendantsString">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Descendants(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.Elements">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Elements()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.ElementsString">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Elements(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.FindFirstHtmlNodeCollectionString">
            <summary>Задает оболочка совместимости HtmlNodeCollection.FindFirst(HtmlNodeCollection items, String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.FindFirstString">
            <summary>Задает оболочка совместимости HtmlNodeCollection.FindFirst(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.GetNodeIndexHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.GetNodeIndex(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.IndexOfHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.IndexOf(HtmlNode item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.InsertInt32HtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Insert(Int32 index, HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.IsReadOnlyGet">
            <summary>Задает оболочка совместимости HtmlNodeCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.ItemGetHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.get_Item(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.ItemGetInt32">
            <summary>Задает оболочка совместимости HtmlNodeCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.ItemGetString">
            <summary>Задает оболочка совместимости HtmlNodeCollection.get_Item(String nodeName)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.ItemSetInt32HtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.set_Item(Int32 index, HtmlNode value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.Nodes">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Nodes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.PrependHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Prepend(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.RemoveAtInt32">
            <summary>Задает оболочка совместимости HtmlNodeCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.RemoveHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Remove(HtmlNode item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.RemoveInt32">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Remove(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.ReplaceInt32HtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Replace(Int32 index, HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.SystemCollectionsGenericIEnumerableHtmlAgilityPackHtmlNodeGetEnumerator">
            <summary>Задает оболочка совместимости HtmlNodeCollection.System.Collections.Generic.IEnumerable&lt;HtmlAgilityPack.HtmlNode&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости HtmlNodeCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.AddHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Add(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.AppendHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Append(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.Clear">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Clear()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.ContainsHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Contains(HtmlNode item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.CopyToHtmlNodeArrayInt32">
            <summary>Задает оболочка совместимости HtmlNodeCollection.CopyTo(HtmlNode[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.CountGet">
            <summary>Задает оболочка совместимости HtmlNodeCollection.get_Count()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.Descendants">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Descendants()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.DescendantsString">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Descendants(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.Elements">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Elements()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.ElementsString">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Elements(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.FindFirstString">
            <summary>Задает оболочка совместимости HtmlNodeCollection.FindFirst(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.GetNodeIndexHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.GetNodeIndex(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.IndexOfHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.IndexOf(HtmlNode item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.InsertInt32HtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Insert(Int32 index, HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.IsReadOnlyGet">
            <summary>Задает оболочка совместимости HtmlNodeCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.ItemGetHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.get_Item(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.ItemGetInt32">
            <summary>Задает оболочка совместимости HtmlNodeCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.ItemGetString">
            <summary>Задает оболочка совместимости HtmlNodeCollection.get_Item(String nodeName)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.ItemSetInt32HtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.set_Item(Int32 index, HtmlNode value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.Nodes">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Nodes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.PrependHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Prepend(HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.RemoveAtInt32">
            <summary>Задает оболочка совместимости HtmlNodeCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.RemoveHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Remove(HtmlNode item)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.RemoveInt32">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Remove(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.ReplaceInt32HtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeCollection.Replace(Int32 index, HtmlNode node)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.SystemCollectionsGenericIEnumerableHtmlAgilityPackHtmlNodeGetEnumerator">
            <summary>Задает оболочка совместимости HtmlNodeCollection.System.Collections.Generic.IEnumerable&lt;HtmlAgilityPack.HtmlNode&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости HtmlNodeCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlNodeNavigator</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.#ctor(HtmlAgilityPack.HtmlNodeNavigator)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.Bind(System.Xml.IXmlNamespaceResolver)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.Bind(System.ICloneable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.BaseURIGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_BaseURI()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.Clone">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.Clone()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.Constructor">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorHtmlDocumentHtmlNode">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(HtmlDocument doc, HtmlNode currentNode)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorHtmlNodeNavigator">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(HtmlNodeNavigator nav)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorStream">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(Stream stream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorStreamBoolean">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(Stream stream, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorStreamEncoding">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorStreamEncodingBoolean">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorStreamEncodingBooleanInt32">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 buffersize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorStringBoolean">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(String path, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorStringEncoding">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(String path, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorStringEncodingBoolean">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorStringEncodingBooleanInt32">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 buffersize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ConstructorTextReader">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.HtmlNodeNavigator(TextReader reader)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.CurrentDocumentGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_CurrentDocument()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.CurrentNodeGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_CurrentNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.GetAttributeStringString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.GetAttribute(String localName, String namespaceURI)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.GetNamespaceString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.GetNamespace(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.HasAttributesGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_HasAttributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.HasChildrenGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_HasChildren()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.InternalTraceObject">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.InternalTrace(Object traceValue)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.IsEmptyElementGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_IsEmptyElement()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.IsSamePositionXPathNavigator">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.IsSamePosition(XPathNavigator other)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.LocalNameGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_LocalName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToAttributeStringString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToAttribute(String localName, String namespaceURI)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToFirst">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToFirst()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToFirstAttribute">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToFirstAttribute()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToFirstChild">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToFirstChild()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToFirstNamespaceXPathNamespaceScope">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToFirstNamespace(XPathNamespaceScope scope)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToIdString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToId(String id)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToNamespaceString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToNamespace(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToNext">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToNext()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToNextAttribute">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToNextAttribute()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToNextNamespaceXPathNamespaceScope">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToNextNamespace(XPathNamespaceScope scope)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToParent">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToParent()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToPrevious">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToPrevious()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToRoot">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToRoot()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.MoveToXPathNavigator">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveTo(XPathNavigator other)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.NameGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_Name()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.NameTableGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_NameTable()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.NamespaceURIGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_NamespaceURI()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.NodeTypeGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_NodeType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.PrefixGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_Prefix()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.Reset">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.Reset()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.ValueGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_Value()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.XmlLangGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_XmlLang()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.BaseURIGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_BaseURI()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.Clone">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.Clone()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.CurrentDocumentGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_CurrentDocument()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.CurrentNodeGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_CurrentNode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.GetAttributeStringString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.GetAttribute(String localName, String namespaceURI)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.GetNamespaceString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.GetNamespace(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.HasAttributesGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_HasAttributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.HasChildrenGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_HasChildren()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.InternalTraceObject">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.InternalTrace(Object traceValue)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.IsEmptyElementGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_IsEmptyElement()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.IsSamePositionXPathNavigator">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.IsSamePosition(XPathNavigator other)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.LocalNameGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_LocalName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToAttributeStringString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToAttribute(String localName, String namespaceURI)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToFirst">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToFirst()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToFirstAttribute">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToFirstAttribute()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToFirstChild">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToFirstChild()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToFirstNamespaceXPathNamespaceScope">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToFirstNamespace(XPathNamespaceScope scope)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToIdString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToId(String id)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToNamespaceString">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToNamespace(String name)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToNext">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToNext()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToNextAttribute">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToNextAttribute()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToNextNamespaceXPathNamespaceScope">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToNextNamespace(XPathNamespaceScope scope)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToParent">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToParent()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToPrevious">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToPrevious()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToRoot">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveToRoot()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.MoveToXPathNavigator">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.MoveTo(XPathNavigator other)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.NameGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_Name()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.NameTableGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_NameTable()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.NamespaceURIGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_NamespaceURI()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.NodeTypeGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_NodeType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.PrefixGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_Prefix()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.Reset">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.Reset()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.ValueGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_Value()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlNodeNavigator.AllInstances.XmlLangGet">
            <summary>Задает оболочка совместимости HtmlNodeNavigator.get_XmlLang()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlParseError">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlParseError</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlParseError.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlParseError.#ctor(HtmlAgilityPack.HtmlParseError)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlParseError.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlParseError.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.CodeGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_Code()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.ConstructorHtmlParseErrorCodeInt32Int32Int32StringString">
            <summary>Задает оболочка совместимости HtmlParseError.HtmlParseError(HtmlParseErrorCode code, Int32 line, Int32 linePosition, Int32 streamPosition, String sourceText, String reason)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.LineGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_Line()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.LinePositionGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_LinePosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.ReasonGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_Reason()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.SourceTextGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_SourceText()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.StreamPositionGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_StreamPosition()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlParseError.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.AllInstances.CodeGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_Code()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.AllInstances.LineGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_Line()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.AllInstances.LinePositionGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_LinePosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.AllInstances.ReasonGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_Reason()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.AllInstances.SourceTextGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_SourceText()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlParseError.AllInstances.StreamPositionGet">
            <summary>Задает оболочка совместимости HtmlParseError.get_StreamPosition()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlTextNode">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlTextNode</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlTextNode.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlTextNode.#ctor(HtmlAgilityPack.HtmlTextNode)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlTextNode.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlTextNode.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlTextNode.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.ConstructorHtmlDocumentInt32">
            <summary>Задает оболочка совместимости HtmlTextNode.HtmlTextNode(HtmlDocument ownerdocument, Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.InnerHtmlGet">
            <summary>Задает оболочка совместимости HtmlTextNode.get_InnerHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.InnerHtmlSetString">
            <summary>Задает оболочка совместимости HtmlTextNode.set_InnerHtml(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.OuterHtmlGet">
            <summary>Задает оболочка совместимости HtmlTextNode.get_OuterHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.TextGet">
            <summary>Задает оболочка совместимости HtmlTextNode.get_Text()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.TextSetString">
            <summary>Задает оболочка совместимости HtmlTextNode.set_Text(String value)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlTextNode.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.AllInstances.InnerHtmlGet">
            <summary>Задает оболочка совместимости HtmlTextNode.get_InnerHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.AllInstances.InnerHtmlSetString">
            <summary>Задает оболочка совместимости HtmlTextNode.set_InnerHtml(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.AllInstances.OuterHtmlGet">
            <summary>Задает оболочка совместимости HtmlTextNode.get_OuterHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.AllInstances.TextGet">
            <summary>Задает оболочка совместимости HtmlTextNode.get_Text()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlTextNode.AllInstances.TextSetString">
            <summary>Задает оболочка совместимости HtmlTextNode.set_Text(String value)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlWeb">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlWeb</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlWeb.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlWeb.#ctor(HtmlAgilityPack.HtmlWeb)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlWeb.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlWeb.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AutoDetectEncodingGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_AutoDetectEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AutoDetectEncodingSetBoolean">
            <summary>Задает оболочка совместимости HtmlWeb.set_AutoDetectEncoding(Boolean value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.CacheOnlyGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_CacheOnly()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.CacheOnlySetBoolean">
            <summary>Задает оболочка совместимости HtmlWeb.set_CacheOnly(Boolean value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.CachePathGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_CachePath()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.CachePathSetString">
            <summary>Задает оболочка совместимости HtmlWeb.set_CachePath(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.Constructor">
            <summary>Задает оболочка совместимости HtmlWeb.HtmlWeb()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.CreateInstanceStringStringXsltArgumentListType">
            <summary>Задает оболочка совместимости HtmlWeb.CreateInstance(String htmlUrl, String xsltUrl, XsltArgumentList xsltArgs, Type type)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.CreateInstanceStringStringXsltArgumentListTypeString">
            <summary>Задает оболочка совместимости HtmlWeb.CreateInstance(String htmlUrl, String xsltUrl, XsltArgumentList xsltArgs, Type type, String xmlPath)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.CreateInstanceStringType">
            <summary>Задает оболочка совместимости HtmlWeb.CreateInstance(String url, Type type)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.FilePreparePathString">
            <summary>Задает оболочка совместимости HtmlWeb.FilePreparePath(String target)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.FromCacheGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_FromCache()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.GetCacheHeaderUriStringString">
            <summary>Задает оболочка совместимости HtmlWeb.GetCacheHeader(Uri requestUri, String name, String def)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.GetCacheHeadersPathUri">
            <summary>Задает оболочка совместимости HtmlWeb.GetCacheHeadersPath(Uri uri)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.GetCachePathUri">
            <summary>Задает оболочка совместимости HtmlWeb.GetCachePath(Uri uri)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.GetContentTypeForExtensionStringString">
            <summary>Задает оболочка совместимости HtmlWeb.GetContentTypeForExtension(String extension, String def)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.GetExtensionForContentTypeStringString">
            <summary>Задает оболочка совместимости HtmlWeb.GetExtensionForContentType(String contentType, String def)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.GetStringString">
            <summary>Задает оболочка совместимости HtmlWeb.Get(String url, String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.GetStringStringString">
            <summary>Задает оболочка совместимости HtmlWeb.Get(String url, String path, String method)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.GetStringStringWebProxyNetworkCredential">
            <summary>Задает оболочка совместимости HtmlWeb.Get(String url, String path, WebProxy proxy, NetworkCredential credentials)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.GetStringStringWebProxyNetworkCredentialString">
            <summary>Задает оболочка совместимости HtmlWeb.Get(String url, String path, WebProxy proxy, NetworkCredential credentials, String method)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.GetUriStringStringHtmlDocumentIWebProxyICredentials">
            <summary>Задает оболочка совместимости HtmlWeb.Get(Uri uri, String method, String path, HtmlDocument doc, IWebProxy proxy, ICredentials creds)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.IsCacheHtmlContentString">
            <summary>Задает оболочка совместимости HtmlWeb.IsCacheHtmlContent(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.IsGZipEncodingString">
            <summary>Задает оболочка совместимости HtmlWeb.IsGZipEncoding(String contentEncoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.IsHtmlContentString">
            <summary>Задает оболочка совместимости HtmlWeb.IsHtmlContent(String contentType)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.LoadHtmlAsXmlStringStringXsltArgumentListXmlTextWriter">
            <summary>Задает оболочка совместимости HtmlWeb.LoadHtmlAsXml(String htmlUrl, String xsltUrl, XsltArgumentList xsltArgs, XmlTextWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.LoadHtmlAsXmlStringStringXsltArgumentListXmlTextWriterString">
            <summary>Задает оболочка совместимости HtmlWeb.LoadHtmlAsXml(String htmlUrl, String xsltUrl, XsltArgumentList xsltArgs, XmlTextWriter writer, String xmlPath)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.LoadHtmlAsXmlStringXmlTextWriter">
            <summary>Задает оболочка совместимости HtmlWeb.LoadHtmlAsXml(String htmlUrl, XmlTextWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.LoadString">
            <summary>Задает оболочка совместимости HtmlWeb.Load(String url)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.LoadStringString">
            <summary>Задает оболочка совместимости HtmlWeb.Load(String url, String method)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.LoadStringStringInt32StringString">
            <summary>Задает оболочка совместимости HtmlWeb.Load(String url, String proxyHost, Int32 proxyPort, String userId, String password)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.LoadStringStringWebProxyNetworkCredential">
            <summary>Задает оболочка совместимости HtmlWeb.Load(String url, String method, WebProxy proxy, NetworkCredential credentials)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.LoadUrlUriStringWebProxyNetworkCredential">
            <summary>Задает оболочка совместимости HtmlWeb.LoadUrl(Uri uri, String method, WebProxy proxy, NetworkCredential creds)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.MimeTypesGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_MimeTypes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.OverrideEncodingGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_OverrideEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.OverrideEncodingSetEncoding">
            <summary>Задает оболочка совместимости HtmlWeb.set_OverrideEncoding(Encoding value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.RemoveMillisecondsDateTime">
            <summary>Задает оболочка совместимости HtmlWeb.RemoveMilliseconds(DateTime t)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.RequestDurationGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_RequestDuration()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.ResponseUriGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_ResponseUri()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.SaveCacheHeadersUriHttpWebResponse">
            <summary>Задает оболочка совместимости HtmlWeb.SaveCacheHeaders(Uri requestUri, HttpWebResponse resp)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.SaveStreamStreamStringDateTimeInt32">
            <summary>Задает оболочка совместимости HtmlWeb.SaveStream(Stream stream, String path, DateTime touchDate, Int32 streamBufferSize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.StatusCodeGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_StatusCode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.StreamBufferSizeGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_StreamBufferSize()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.StreamBufferSizeSetInt32">
            <summary>Задает оболочка совместимости HtmlWeb.set_StreamBufferSize(Int32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.UseCookiesGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_UseCookies()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.UseCookiesSetBoolean">
            <summary>Задает оболочка совместимости HtmlWeb.set_UseCookies(Boolean value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.UserAgentGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_UserAgent()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.UserAgentSetString">
            <summary>Задает оболочка совместимости HtmlWeb.set_UserAgent(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.UsingCacheGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_UsingCache()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.UsingCacheSetBoolean">
            <summary>Задает оболочка совместимости HtmlWeb.set_UsingCache(Boolean value)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.AutoDetectEncodingGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_AutoDetectEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.AutoDetectEncodingSetBoolean">
            <summary>Задает оболочка совместимости HtmlWeb.set_AutoDetectEncoding(Boolean value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.CacheOnlyGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_CacheOnly()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.CacheOnlySetBoolean">
            <summary>Задает оболочка совместимости HtmlWeb.set_CacheOnly(Boolean value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.CachePathGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_CachePath()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.CachePathSetString">
            <summary>Задает оболочка совместимости HtmlWeb.set_CachePath(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.CreateInstanceStringStringXsltArgumentListType">
            <summary>Задает оболочка совместимости HtmlWeb.CreateInstance(String htmlUrl, String xsltUrl, XsltArgumentList xsltArgs, Type type)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.CreateInstanceStringStringXsltArgumentListTypeString">
            <summary>Задает оболочка совместимости HtmlWeb.CreateInstance(String htmlUrl, String xsltUrl, XsltArgumentList xsltArgs, Type type, String xmlPath)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.CreateInstanceStringType">
            <summary>Задает оболочка совместимости HtmlWeb.CreateInstance(String url, Type type)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.FromCacheGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_FromCache()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.GetCacheHeaderUriStringString">
            <summary>Задает оболочка совместимости HtmlWeb.GetCacheHeader(Uri requestUri, String name, String def)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.GetCacheHeadersPathUri">
            <summary>Задает оболочка совместимости HtmlWeb.GetCacheHeadersPath(Uri uri)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.GetCachePathUri">
            <summary>Задает оболочка совместимости HtmlWeb.GetCachePath(Uri uri)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.GetStringString">
            <summary>Задает оболочка совместимости HtmlWeb.Get(String url, String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.GetStringStringString">
            <summary>Задает оболочка совместимости HtmlWeb.Get(String url, String path, String method)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.GetStringStringWebProxyNetworkCredential">
            <summary>Задает оболочка совместимости HtmlWeb.Get(String url, String path, WebProxy proxy, NetworkCredential credentials)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.GetStringStringWebProxyNetworkCredentialString">
            <summary>Задает оболочка совместимости HtmlWeb.Get(String url, String path, WebProxy proxy, NetworkCredential credentials, String method)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.GetUriStringStringHtmlDocumentIWebProxyICredentials">
            <summary>Задает оболочка совместимости HtmlWeb.Get(Uri uri, String method, String path, HtmlDocument doc, IWebProxy proxy, ICredentials creds)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.IsCacheHtmlContentString">
            <summary>Задает оболочка совместимости HtmlWeb.IsCacheHtmlContent(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.IsGZipEncodingString">
            <summary>Задает оболочка совместимости HtmlWeb.IsGZipEncoding(String contentEncoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.IsHtmlContentString">
            <summary>Задает оболочка совместимости HtmlWeb.IsHtmlContent(String contentType)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.LoadHtmlAsXmlStringStringXsltArgumentListXmlTextWriter">
            <summary>Задает оболочка совместимости HtmlWeb.LoadHtmlAsXml(String htmlUrl, String xsltUrl, XsltArgumentList xsltArgs, XmlTextWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.LoadHtmlAsXmlStringStringXsltArgumentListXmlTextWriterString">
            <summary>Задает оболочка совместимости HtmlWeb.LoadHtmlAsXml(String htmlUrl, String xsltUrl, XsltArgumentList xsltArgs, XmlTextWriter writer, String xmlPath)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.LoadHtmlAsXmlStringXmlTextWriter">
            <summary>Задает оболочка совместимости HtmlWeb.LoadHtmlAsXml(String htmlUrl, XmlTextWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.LoadString">
            <summary>Задает оболочка совместимости HtmlWeb.Load(String url)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.LoadStringString">
            <summary>Задает оболочка совместимости HtmlWeb.Load(String url, String method)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.LoadStringStringInt32StringString">
            <summary>Задает оболочка совместимости HtmlWeb.Load(String url, String proxyHost, Int32 proxyPort, String userId, String password)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.LoadStringStringWebProxyNetworkCredential">
            <summary>Задает оболочка совместимости HtmlWeb.Load(String url, String method, WebProxy proxy, NetworkCredential credentials)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.LoadUrlUriStringWebProxyNetworkCredential">
            <summary>Задает оболочка совместимости HtmlWeb.LoadUrl(Uri uri, String method, WebProxy proxy, NetworkCredential creds)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.OverrideEncodingGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_OverrideEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.OverrideEncodingSetEncoding">
            <summary>Задает оболочка совместимости HtmlWeb.set_OverrideEncoding(Encoding value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.RequestDurationGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_RequestDuration()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.ResponseUriGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_ResponseUri()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.SaveCacheHeadersUriHttpWebResponse">
            <summary>Задает оболочка совместимости HtmlWeb.SaveCacheHeaders(Uri requestUri, HttpWebResponse resp)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.StatusCodeGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_StatusCode()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.StreamBufferSizeGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_StreamBufferSize()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.StreamBufferSizeSetInt32">
            <summary>Задает оболочка совместимости HtmlWeb.set_StreamBufferSize(Int32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.UseCookiesGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_UseCookies()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.UseCookiesSetBoolean">
            <summary>Задает оболочка совместимости HtmlWeb.set_UseCookies(Boolean value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.UserAgentGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_UserAgent()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.UserAgentSetString">
            <summary>Задает оболочка совместимости HtmlWeb.set_UserAgent(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.UsingCacheGet">
            <summary>Задает оболочка совместимости HtmlWeb.get_UsingCache()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWeb.AllInstances.UsingCacheSetBoolean">
            <summary>Задает оболочка совместимости HtmlWeb.set_UsingCache(Boolean value)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlWebException">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.HtmlWebException</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlWebException.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlWebException.#ctor(HtmlAgilityPack.HtmlWebException)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlWebException.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlWebException.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimHtmlWebException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWebException.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimHtmlWebException.ConstructorString">
            <summary>Задает оболочка совместимости HtmlWebException.HtmlWebException(String message)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimHtmlWebException.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocument">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.MixedCodeDocument</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.#ctor(HtmlAgilityPack.MixedCodeDocument)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.CodeFragmentsGet">
            <summary>Задает оболочка совместимости MixedCodeDocument.get_CodeFragments()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.CodeGet">
            <summary>Задает оболочка совместимости MixedCodeDocument.get_Code()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.Constructor">
            <summary>Задает оболочка совместимости MixedCodeDocument.MixedCodeDocument()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.CreateCodeFragment">
            <summary>Задает оболочка совместимости MixedCodeDocument.CreateCodeFragment()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.CreateFragmentMixedCodeDocumentFragmentType">
            <summary>Задает оболочка совместимости MixedCodeDocument.CreateFragment(MixedCodeDocumentFragmentType type)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.CreateTextFragment">
            <summary>Задает оболочка совместимости MixedCodeDocument.CreateTextFragment()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.FragmentsGet">
            <summary>Задает оболочка совместимости MixedCodeDocument.get_Fragments()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.GetOutEncoding">
            <summary>Задает оболочка совместимости MixedCodeDocument.GetOutEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.IncrementPosition">
            <summary>Задает оболочка совместимости MixedCodeDocument.IncrementPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadHtmlString">
            <summary>Задает оболочка совместимости MixedCodeDocument.LoadHtml(String html)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadStream">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(Stream stream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadStreamBoolean">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(Stream stream, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadStreamEncoding">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadStreamEncodingBoolean">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadStreamEncodingBooleanInt32">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 buffersize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadString">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadStringBoolean">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(String path, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadStringEncoding">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(String path, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadStringEncodingBoolean">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadStringEncodingBooleanInt32">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 buffersize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.LoadTextReader">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(TextReader reader)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.Parse">
            <summary>Задает оболочка совместимости MixedCodeDocument.Parse()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.SaveStream">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(Stream outStream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.SaveStreamEncoding">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(Stream outStream, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.SaveStreamWriter">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(StreamWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.SaveString">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(String filename)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.SaveStringEncoding">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(String filename, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.SaveTextWriter">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(TextWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.SetPosition">
            <summary>Задает оболочка совместимости MixedCodeDocument.SetPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.StreamEncodingGet">
            <summary>Задает оболочка совместимости MixedCodeDocument.get_StreamEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.TextFragmentsGet">
            <summary>Задает оболочка совместимости MixedCodeDocument.get_TextFragments()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.CodeFragmentsGet">
            <summary>Задает оболочка совместимости MixedCodeDocument.get_CodeFragments()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.CodeGet">
            <summary>Задает оболочка совместимости MixedCodeDocument.get_Code()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.CreateCodeFragment">
            <summary>Задает оболочка совместимости MixedCodeDocument.CreateCodeFragment()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.CreateFragmentMixedCodeDocumentFragmentType">
            <summary>Задает оболочка совместимости MixedCodeDocument.CreateFragment(MixedCodeDocumentFragmentType type)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.CreateTextFragment">
            <summary>Задает оболочка совместимости MixedCodeDocument.CreateTextFragment()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.FragmentsGet">
            <summary>Задает оболочка совместимости MixedCodeDocument.get_Fragments()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.GetOutEncoding">
            <summary>Задает оболочка совместимости MixedCodeDocument.GetOutEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.IncrementPosition">
            <summary>Задает оболочка совместимости MixedCodeDocument.IncrementPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadHtmlString">
            <summary>Задает оболочка совместимости MixedCodeDocument.LoadHtml(String html)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadStream">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(Stream stream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadStreamBoolean">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(Stream stream, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadStreamEncoding">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadStreamEncodingBoolean">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadStreamEncodingBooleanInt32">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 buffersize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadString">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(String path)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadStringBoolean">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(String path, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadStringEncoding">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(String path, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadStringEncodingBoolean">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadStringEncodingBooleanInt32">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 buffersize)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.LoadTextReader">
            <summary>Задает оболочка совместимости MixedCodeDocument.Load(TextReader reader)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.Parse">
            <summary>Задает оболочка совместимости MixedCodeDocument.Parse()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.SaveStream">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(Stream outStream)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.SaveStreamEncoding">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(Stream outStream, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.SaveStreamWriter">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(StreamWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.SaveString">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(String filename)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.SaveStringEncoding">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(String filename, Encoding encoding)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.SaveTextWriter">
            <summary>Задает оболочка совместимости MixedCodeDocument.Save(TextWriter writer)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.SetPosition">
            <summary>Задает оболочка совместимости MixedCodeDocument.SetPosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.StreamEncodingGet">
            <summary>Задает оболочка совместимости MixedCodeDocument.get_StreamEncoding()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocument.AllInstances.TextFragmentsGet">
            <summary>Задает оболочка совместимости MixedCodeDocument.get_TextFragments()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.MixedCodeDocumentCodeFragment</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.#ctor(HtmlAgilityPack.MixedCodeDocumentCodeFragment)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.CodeGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentCodeFragment.get_Code()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.CodeSetString">
            <summary>Задает оболочка совместимости MixedCodeDocumentCodeFragment.set_Code(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.ConstructorMixedCodeDocument">
            <summary>Задает оболочка совместимости MixedCodeDocumentCodeFragment.MixedCodeDocumentCodeFragment(MixedCodeDocument doc)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.AllInstances.CodeGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentCodeFragment.get_Code()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentCodeFragment.AllInstances.CodeSetString">
            <summary>Задает оболочка совместимости MixedCodeDocumentCodeFragment.set_Code(String value)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.MixedCodeDocumentFragment</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.#ctor(HtmlAgilityPack.MixedCodeDocumentFragment)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.ConstructorMixedCodeDocumentMixedCodeDocumentFragmentType">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.MixedCodeDocumentFragment(MixedCodeDocument doc, MixedCodeDocumentFragmentType type)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.FragmentTextGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.get_FragmentText()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.FragmentTextSetString">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.set_FragmentText(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.FragmentTypeGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.get_FragmentType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.LineGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.get_Line()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.LinePositionGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.get_LinePosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.LineSetInt32">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.set_Line(Int32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.StreamPositionGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.get_StreamPosition()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.AllInstances.FragmentTextGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.get_FragmentText()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.AllInstances.FragmentTextSetString">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.set_FragmentText(String value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.AllInstances.FragmentTypeGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.get_FragmentType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.AllInstances.LineGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.get_Line()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.AllInstances.LinePositionGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.get_LinePosition()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.AllInstances.LineSetInt32">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.set_Line(Int32 value)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragment.AllInstances.StreamPositionGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragment.get_StreamPosition()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.MixedCodeDocumentFragmentList</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.#ctor(HtmlAgilityPack.MixedCodeDocumentFragmentList)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AppendMixedCodeDocumentFragment">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.Append(MixedCodeDocumentFragment newFragment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.Clear">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.Clear()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ConstructorMixedCodeDocument">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.MixedCodeDocumentFragmentList(MixedCodeDocument doc)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.CountGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.get_Count()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.DocGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.get_Doc()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.GetEnumerator">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.GetEnumerator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.GetFragmentIndexMixedCodeDocumentFragment">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.GetFragmentIndex(MixedCodeDocumentFragment fragment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ItemGetInt32">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.PrependMixedCodeDocumentFragment">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.Prepend(MixedCodeDocumentFragment newFragment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.RemoveAll">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.RemoveAll()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.RemoveAtInt32">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.RemoveMixedCodeDocumentFragment">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.Remove(MixedCodeDocumentFragment fragment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.AppendMixedCodeDocumentFragment">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.Append(MixedCodeDocumentFragment newFragment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.Clear">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.Clear()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.CountGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.get_Count()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.DocGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.get_Doc()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.GetEnumerator">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.GetEnumerator()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.GetFragmentIndexMixedCodeDocumentFragment">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.GetFragmentIndex(MixedCodeDocumentFragment fragment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.ItemGetInt32">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.PrependMixedCodeDocumentFragment">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.Prepend(MixedCodeDocumentFragment newFragment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.RemoveAll">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.RemoveAll()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.RemoveAtInt32">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.RemoveMixedCodeDocumentFragment">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.Remove(MixedCodeDocumentFragment fragment)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentList.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.MixedCodeDocumentFragmentList+MixedCodeDocumentFragmentEnumerator</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.#ctor(HtmlAgilityPack.MixedCodeDocumentFragmentList.MixedCodeDocumentFragmentEnumerator)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.Bind(System.Collections.IEnumerator)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.ConstructorIListOfMixedCodeDocumentFragment">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentEnumerator.MixedCodeDocumentFragmentEnumerator(IList`1&lt;MixedCodeDocumentFragment&gt; items)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.CurrentGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentEnumerator.get_Current()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.CurrentSystemCollectionsIEnumeratorget">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentEnumerator.System.Collections.IEnumerator.get_Current()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.MoveNext">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentEnumerator.MoveNext()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.Reset">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentEnumerator.Reset()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.AllInstances.CurrentGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentEnumerator.get_Current()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.AllInstances.CurrentSystemCollectionsIEnumeratorget">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentEnumerator.System.Collections.IEnumerator.get_Current()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.AllInstances.MoveNext">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentEnumerator.MoveNext()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentFragmentList.ShimMixedCodeDocumentFragmentEnumerator.AllInstances.Reset">
            <summary>Задает оболочка совместимости MixedCodeDocumentFragmentEnumerator.Reset()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.MixedCodeDocumentTextFragment</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.#ctor(HtmlAgilityPack.MixedCodeDocumentTextFragment)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.ConstructorMixedCodeDocument">
            <summary>Задает оболочка совместимости MixedCodeDocumentTextFragment.MixedCodeDocumentTextFragment(MixedCodeDocument doc)</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.TextGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentTextFragment.get_Text()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.TextSetString">
            <summary>Задает оболочка совместимости MixedCodeDocumentTextFragment.set_Text(String value)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.AllInstances.TextGet">
            <summary>Задает оболочка совместимости MixedCodeDocumentTextFragment.get_Text()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimMixedCodeDocumentTextFragment.AllInstances.TextSetString">
            <summary>Задает оболочка совместимости MixedCodeDocumentTextFragment.set_Text(String value)</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimPermissionHelper">
            <summary>Тип оболочки совместимости для HtmlAgilityPack.PermissionHelper</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimPermissionHelper.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimPermissionHelper.#ctor(HtmlAgilityPack.PermissionHelper)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimPermissionHelper.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimPermissionHelper.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.ShimPermissionHelper.Bind(HtmlAgilityPack.IPermissionHelper)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimPermissionHelper.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimPermissionHelper.Constructor">
            <summary>Задает оболочка совместимости PermissionHelper.PermissionHelper()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimPermissionHelper.GetIsDnsAvailable">
            <summary>Задает оболочка совместимости PermissionHelper.GetIsDnsAvailable()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimPermissionHelper.GetIsRegistryAvailable">
            <summary>Задает оболочка совместимости PermissionHelper.GetIsRegistryAvailable()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.ShimPermissionHelper.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimPermissionHelper.AllInstances.GetIsDnsAvailable">
            <summary>Задает оболочка совместимости PermissionHelper.GetIsDnsAvailable()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.ShimPermissionHelper.AllInstances.GetIsRegistryAvailable">
            <summary>Задает оболочка совместимости PermissionHelper.GetIsRegistryAvailable()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.StubCrc32">
            <summary>Тип заглушки HtmlAgilityPack.Crc32</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubCrc32.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubCrc32.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCrc32</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubCrc32.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubCrc32.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubCrc32.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.StubHtmlDocument">
            <summary>Тип заглушки HtmlAgilityPack.HtmlDocument</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlDocument.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlDocument.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHtmlDocument</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlDocument.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlDocument.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlDocument.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.StubHtmlNode">
            <summary>Тип заглушки HtmlAgilityPack.HtmlNode</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNode.#ctor(HtmlAgilityPack.HtmlNodeType,HtmlAgilityPack.HtmlDocument,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNode.AttachBackingFieldToInnerHtml">
            <summary>Присоединение делегатов для эмуляции StubHtmlNode.InnerHtml как свойства с резервным полем.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNode.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHtmlNode</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNode.InnerHtmlGet">
            <summary>Задает stub HtmlNode.get_InnerHtml()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNode.InnerHtmlSetString">
            <summary>Задает stub HtmlNode.set_InnerHtml(String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNode.InnerTextGet">
            <summary>Задает stub HtmlNode.get_InnerText()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNode.OuterHtmlGet">
            <summary>Задает stub HtmlNode.get_OuterHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNode.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNode.InnerHtml">
            <summary>Задает stub HtmlNode.get_InnerHtml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNode.InnerText">
            <summary>Задает stub HtmlNode.get_InnerText()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNode.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNode.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNode.OuterHtml">
            <summary>Задает stub HtmlNode.get_OuterHtml()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.StubHtmlNodeCollection">
            <summary>Тип заглушки HtmlAgilityPack.HtmlNodeCollection</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeCollection.#ctor(HtmlAgilityPack.HtmlNode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHtmlNodeCollection</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator">
            <summary>Тип заглушки HtmlAgilityPack.HtmlNodeNavigator</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.IO.TextReader)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.String,System.Text.Encoding)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.IO.Stream,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.String,System.Text.Encoding,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AppendChild(System.String)">
            <summary>Задает заглушка XPathNavigator.AppendChild(String newChild)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AppendChild">
            <summary>Задает заглушка XPathNavigator.AppendChild()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AppendChild(System.Xml.XmlReader)">
            <summary>Задает заглушка XPathNavigator.AppendChild(XmlReader newChild)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.AppendChild(XPathNavigator newChild)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AppendChild01">
            <summary>Задает stub XPathNavigator.AppendChild()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
            <summary>Задает заглушка XPathNavigator.AppendChildElement(String prefix, String localName, String namespaceURI, String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AppendChildElementStringStringStringString">
            <summary>Задает stub XPathNavigator.AppendChildElement(String prefix, String localName, String namespaceURI, String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AppendChildString">
            <summary>Задает stub XPathNavigator.AppendChild(String newChild)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AppendChildXPathNavigator">
            <summary>Задает stub XPathNavigator.AppendChild(XPathNavigator newChild)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AppendChildXmlReader">
            <summary>Задает stub XPathNavigator.AppendChild(XmlReader newChild)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AttachBackingFieldToInnerXml">
            <summary>Присоединение делегатов для эмуляции StubHtmlNodeNavigator.InnerXml как свойства с резервным полем.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.AttachBackingFieldToOuterXml">
            <summary>Присоединение делегатов для эмуляции StubHtmlNodeNavigator.OuterXml как свойства с резервным полем.</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.BaseURIGet">
            <summary>Задает stub HtmlNodeNavigator.get_BaseURI()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CanEditGet">
            <summary>Задает stub XPathNavigator.get_CanEdit()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
            <summary>Задает заглушка XPathNavigator.CheckValidity(XmlSchemaSet schemas, ValidationEventHandler validationEventHandler)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CheckValidityXmlSchemaSetValidationEventHandler">
            <summary>Задает stub XPathNavigator.CheckValidity(XmlSchemaSet schemas, ValidationEventHandler validationEventHandler)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Clone">
            <summary>Задает заглушка HtmlNodeNavigator.Clone()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Clone01">
            <summary>Задает stub HtmlNodeNavigator.Clone()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.ComparePosition(XPathNavigator nav)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ComparePositionXPathNavigator">
            <summary>Задает stub XPathNavigator.ComparePosition(XPathNavigator nav)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Compile(System.String)">
            <summary>Задает заглушка XPathNavigator.Compile(String xpath)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CompileString">
            <summary>Задает stub XPathNavigator.Compile(String xpath)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
            <summary>Задает заглушка XPathNavigator.CreateAttribute(String prefix, String localName, String namespaceURI, String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CreateAttributeStringStringStringString">
            <summary>Задает stub XPathNavigator.CreateAttribute(String prefix, String localName, String namespaceURI, String value)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CreateAttributes">
            <summary>Задает заглушка XPathNavigator.CreateAttributes()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CreateAttributes01">
            <summary>Задает stub XPathNavigator.CreateAttributes()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CreateNavigator">
            <summary>Задает заглушка XPathNavigator.CreateNavigator()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CreateNavigator01">
            <summary>Задает stub XPathNavigator.CreateNavigator()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.DeleteRange(XPathNavigator lastSiblingToDelete)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.DeleteRangeXPathNavigator">
            <summary>Задает stub XPathNavigator.DeleteRange(XPathNavigator lastSiblingToDelete)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.DeleteSelf">
            <summary>Задает заглушка XPathNavigator.DeleteSelf()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.DeleteSelf01">
            <summary>Задает stub XPathNavigator.DeleteSelf()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
            <summary>Задает заглушка XPathNavigator.Evaluate(XPathExpression expr)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Evaluate(System.String)">
            <summary>Задает заглушка XPathNavigator.Evaluate(String xpath)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
            <summary>Задает заглушка XPathNavigator.Evaluate(XPathExpression expr, XPathNodeIterator context)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>Задает заглушка XPathNavigator.Evaluate(String xpath, IXmlNamespaceResolver resolver)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.EvaluateString">
            <summary>Задает stub XPathNavigator.Evaluate(String xpath)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.EvaluateStringIXmlNamespaceResolver">
            <summary>Задает stub XPathNavigator.Evaluate(String xpath, IXmlNamespaceResolver resolver)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.EvaluateXPathExpression">
            <summary>Задает stub XPathNavigator.Evaluate(XPathExpression expr)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.EvaluateXPathExpressionXPathNodeIterator">
            <summary>Задает stub XPathNavigator.Evaluate(XPathExpression expr, XPathNodeIterator context)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.GetAttribute(System.String,System.String)">
            <summary>Задает заглушка HtmlNodeNavigator.GetAttribute(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.GetAttributeStringString">
            <summary>Задает stub HtmlNodeNavigator.GetAttribute(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.GetNamespace(System.String)">
            <summary>Задает заглушка HtmlNodeNavigator.GetNamespace(String name)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.GetNamespaceString">
            <summary>Задает stub HtmlNodeNavigator.GetNamespace(String name)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
            <summary>Задает заглушка XPathNavigator.GetNamespacesInScope(XmlNamespaceScope scope)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.GetNamespacesInScopeXmlNamespaceScope">
            <summary>Задает stub XPathNavigator.GetNamespacesInScope(XmlNamespaceScope scope)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.HasAttributesGet">
            <summary>Задает stub HtmlNodeNavigator.get_HasAttributes()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.HasChildrenGet">
            <summary>Задает stub HtmlNodeNavigator.get_HasChildren()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHtmlNodeNavigator</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InnerXmlGet">
            <summary>Задает stub XPathNavigator.get_InnerXml()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InnerXmlSetString">
            <summary>Задает stub XPathNavigator.set_InnerXml(String value)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertAfter(System.Xml.XmlReader)">
            <summary>Задает заглушка XPathNavigator.InsertAfter(XmlReader newSibling)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.InsertAfter(XPathNavigator newSibling)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertAfter(System.String)">
            <summary>Задает заглушка XPathNavigator.InsertAfter(String newSibling)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertAfter">
            <summary>Задает заглушка XPathNavigator.InsertAfter()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertAfter01">
            <summary>Задает stub XPathNavigator.InsertAfter()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertAfterString">
            <summary>Задает stub XPathNavigator.InsertAfter(String newSibling)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertAfterXPathNavigator">
            <summary>Задает stub XPathNavigator.InsertAfter(XPathNavigator newSibling)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertAfterXmlReader">
            <summary>Задает stub XPathNavigator.InsertAfter(XmlReader newSibling)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertBefore(System.Xml.XmlReader)">
            <summary>Задает заглушка XPathNavigator.InsertBefore(XmlReader newSibling)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertBefore(System.String)">
            <summary>Задает заглушка XPathNavigator.InsertBefore(String newSibling)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertBefore">
            <summary>Задает заглушка XPathNavigator.InsertBefore()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.InsertBefore(XPathNavigator newSibling)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertBefore01">
            <summary>Задает stub XPathNavigator.InsertBefore()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertBeforeString">
            <summary>Задает stub XPathNavigator.InsertBefore(String newSibling)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertBeforeXPathNavigator">
            <summary>Задает stub XPathNavigator.InsertBefore(XPathNavigator newSibling)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertBeforeXmlReader">
            <summary>Задает stub XPathNavigator.InsertBefore(XmlReader newSibling)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
            <summary>Задает заглушка XPathNavigator.InsertElementAfter(String prefix, String localName, String namespaceURI, String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertElementAfterStringStringStringString">
            <summary>Задает stub XPathNavigator.InsertElementAfter(String prefix, String localName, String namespaceURI, String value)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
            <summary>Задает заглушка XPathNavigator.InsertElementBefore(String prefix, String localName, String namespaceURI, String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InsertElementBeforeStringStringStringString">
            <summary>Задает stub XPathNavigator.InsertElementBefore(String prefix, String localName, String namespaceURI, String value)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.IsDescendant(XPathNavigator nav)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.IsDescendantXPathNavigator">
            <summary>Задает stub XPathNavigator.IsDescendant(XPathNavigator nav)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.IsEmptyElementGet">
            <summary>Задает stub HtmlNodeNavigator.get_IsEmptyElement()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка HtmlNodeNavigator.IsSamePosition(XPathNavigator other)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.IsSamePositionXPathNavigator">
            <summary>Задает stub HtmlNodeNavigator.IsSamePosition(XPathNavigator other)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.LocalNameGet">
            <summary>Задает stub HtmlNodeNavigator.get_LocalName()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.LookupNamespace(System.String)">
            <summary>Задает заглушка XPathNavigator.LookupNamespace(String prefix)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.LookupNamespaceString">
            <summary>Задает stub XPathNavigator.LookupNamespace(String prefix)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.LookupPrefix(System.String)">
            <summary>Задает заглушка XPathNavigator.LookupPrefix(String namespaceURI)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.LookupPrefixString">
            <summary>Задает stub XPathNavigator.LookupPrefix(String namespaceURI)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Matches(System.Xml.XPath.XPathExpression)">
            <summary>Задает заглушка XPathNavigator.Matches(XPathExpression expr)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Matches(System.String)">
            <summary>Задает заглушка XPathNavigator.Matches(String xpath)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MatchesString">
            <summary>Задает stub XPathNavigator.Matches(String xpath)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MatchesXPathExpression">
            <summary>Задает stub XPathNavigator.Matches(XPathExpression expr)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка HtmlNodeNavigator.MoveTo(XPathNavigator other)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToAttribute(System.String,System.String)">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToAttribute(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToAttributeStringString">
            <summary>Задает stub HtmlNodeNavigator.MoveToAttribute(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
            <summary>Задает заглушка XPathNavigator.MoveToChild(XPathNodeType type)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToChild(System.String,System.String)">
            <summary>Задает заглушка XPathNavigator.MoveToChild(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToChildStringString">
            <summary>Задает stub XPathNavigator.MoveToChild(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToChildXPathNodeType">
            <summary>Задает stub XPathNavigator.MoveToChild(XPathNodeType type)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFirst">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToFirst()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFirst01">
            <summary>Задает stub HtmlNodeNavigator.MoveToFirst()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFirstAttribute">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToFirstAttribute()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFirstAttribute01">
            <summary>Задает stub HtmlNodeNavigator.MoveToFirstAttribute()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFirstChild">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToFirstChild()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFirstChild01">
            <summary>Задает stub HtmlNodeNavigator.MoveToFirstChild()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToFirstNamespace(XPathNamespaceScope scope)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFirstNamespaceXPathNamespaceScope">
            <summary>Задает stub HtmlNodeNavigator.MoveToFirstNamespace(XPathNamespaceScope scope)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
            <summary>Задает заглушка XPathNavigator.MoveToFollowing(XPathNodeType type)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.MoveToFollowing(XPathNodeType type, XPathNavigator end)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFollowing(System.String,System.String)">
            <summary>Задает заглушка XPathNavigator.MoveToFollowing(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.MoveToFollowing(String localName, String namespaceURI, XPathNavigator end)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFollowingStringString">
            <summary>Задает stub XPathNavigator.MoveToFollowing(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFollowingStringStringXPathNavigator">
            <summary>Задает stub XPathNavigator.MoveToFollowing(String localName, String namespaceURI, XPathNavigator end)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFollowingXPathNodeType">
            <summary>Задает stub XPathNavigator.MoveToFollowing(XPathNodeType type)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToFollowingXPathNodeTypeXPathNavigator">
            <summary>Задает stub XPathNavigator.MoveToFollowing(XPathNodeType type, XPathNavigator end)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToId(System.String)">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToId(String id)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToIdString">
            <summary>Задает stub HtmlNodeNavigator.MoveToId(String id)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNamespace(System.String)">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToNamespace(String name)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNamespaceString">
            <summary>Задает stub HtmlNodeNavigator.MoveToNamespace(String name)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNext">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToNext()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
            <summary>Задает заглушка XPathNavigator.MoveToNext(XPathNodeType type)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNext(System.String,System.String)">
            <summary>Задает заглушка XPathNavigator.MoveToNext(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNext01">
            <summary>Задает stub HtmlNodeNavigator.MoveToNext()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNextAttribute">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToNextAttribute()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNextAttribute01">
            <summary>Задает stub HtmlNodeNavigator.MoveToNextAttribute()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToNextNamespace(XPathNamespaceScope scope)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNextNamespaceXPathNamespaceScope">
            <summary>Задает stub HtmlNodeNavigator.MoveToNextNamespace(XPathNamespaceScope scope)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNextStringString">
            <summary>Задает stub XPathNavigator.MoveToNext(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToNextXPathNodeType">
            <summary>Задает stub XPathNavigator.MoveToNext(XPathNodeType type)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToParent">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToParent()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToParent01">
            <summary>Задает stub HtmlNodeNavigator.MoveToParent()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToPrevious">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToPrevious()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToPrevious01">
            <summary>Задает stub HtmlNodeNavigator.MoveToPrevious()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToRoot">
            <summary>Задает заглушка HtmlNodeNavigator.MoveToRoot()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToRoot01">
            <summary>Задает stub HtmlNodeNavigator.MoveToRoot()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.MoveToXPathNavigator">
            <summary>Задает stub HtmlNodeNavigator.MoveTo(XPathNavigator other)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.NameGet">
            <summary>Задает stub HtmlNodeNavigator.get_Name()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.NameTableGet">
            <summary>Задает stub HtmlNodeNavigator.get_NameTable()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.NamespaceURIGet">
            <summary>Задает stub HtmlNodeNavigator.get_NamespaceURI()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.NodeTypeGet">
            <summary>Задает stub HtmlNodeNavigator.get_NodeType()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.OuterXmlGet">
            <summary>Задает stub XPathNavigator.get_OuterXml()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.OuterXmlSetString">
            <summary>Задает stub XPathNavigator.set_OuterXml(String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrefixGet">
            <summary>Задает stub HtmlNodeNavigator.get_Prefix()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrependChild">
            <summary>Задает заглушка XPathNavigator.PrependChild()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrependChild(System.Xml.XmlReader)">
            <summary>Задает заглушка XPathNavigator.PrependChild(XmlReader newChild)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.PrependChild(XPathNavigator newChild)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrependChild(System.String)">
            <summary>Задает заглушка XPathNavigator.PrependChild(String newChild)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrependChild01">
            <summary>Задает stub XPathNavigator.PrependChild()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
            <summary>Задает заглушка XPathNavigator.PrependChildElement(String prefix, String localName, String namespaceURI, String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrependChildElementStringStringStringString">
            <summary>Задает stub XPathNavigator.PrependChildElement(String prefix, String localName, String namespaceURI, String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrependChildString">
            <summary>Задает stub XPathNavigator.PrependChild(String newChild)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrependChildXPathNavigator">
            <summary>Задает stub XPathNavigator.PrependChild(XPathNavigator newChild)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.PrependChildXmlReader">
            <summary>Задает stub XPathNavigator.PrependChild(XmlReader newChild)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ReadSubtree">
            <summary>Задает заглушка XPathNavigator.ReadSubtree()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ReadSubtree01">
            <summary>Задает stub XPathNavigator.ReadSubtree()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.ReplaceRange(XPathNavigator lastSiblingToReplace)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ReplaceRangeXPathNavigator">
            <summary>Задает stub XPathNavigator.ReplaceRange(XPathNavigator lastSiblingToReplace)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ReplaceSelf(System.Xml.XmlReader)">
            <summary>Задает заглушка XPathNavigator.ReplaceSelf(XmlReader newNode)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
            <summary>Задает заглушка XPathNavigator.ReplaceSelf(XPathNavigator newNode)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ReplaceSelf(System.String)">
            <summary>Задает заглушка XPathNavigator.ReplaceSelf(String newNode)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ReplaceSelfString">
            <summary>Задает stub XPathNavigator.ReplaceSelf(String newNode)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ReplaceSelfXPathNavigator">
            <summary>Задает stub XPathNavigator.ReplaceSelf(XPathNavigator newNode)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ReplaceSelfXmlReader">
            <summary>Задает stub XPathNavigator.ReplaceSelf(XmlReader newNode)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SchemaInfoGet">
            <summary>Задает stub XPathNavigator.get_SchemaInfo()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Select(System.Xml.XPath.XPathExpression)">
            <summary>Задает заглушка XPathNavigator.Select(XPathExpression expr)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Select(System.String)">
            <summary>Задает заглушка XPathNavigator.Select(String xpath)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>Задает заглушка XPathNavigator.Select(String xpath, IXmlNamespaceResolver resolver)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
            <summary>Задает заглушка XPathNavigator.SelectAncestors(XPathNodeType type, Boolean matchSelf)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
            <summary>Задает заглушка XPathNavigator.SelectAncestors(String name, String namespaceURI, Boolean matchSelf)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectAncestorsStringStringBoolean">
            <summary>Задает stub XPathNavigator.SelectAncestors(String name, String namespaceURI, Boolean matchSelf)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectAncestorsXPathNodeTypeBoolean">
            <summary>Задает stub XPathNavigator.SelectAncestors(XPathNodeType type, Boolean matchSelf)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
            <summary>Задает заглушка XPathNavigator.SelectChildren(XPathNodeType type)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectChildren(System.String,System.String)">
            <summary>Задает заглушка XPathNavigator.SelectChildren(String name, String namespaceURI)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectChildrenStringString">
            <summary>Задает stub XPathNavigator.SelectChildren(String name, String namespaceURI)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectChildrenXPathNodeType">
            <summary>Задает stub XPathNavigator.SelectChildren(XPathNodeType type)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
            <summary>Задает заглушка XPathNavigator.SelectDescendants(XPathNodeType type, Boolean matchSelf)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
            <summary>Задает заглушка XPathNavigator.SelectDescendants(String name, String namespaceURI, Boolean matchSelf)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectDescendantsStringStringBoolean">
            <summary>Задает stub XPathNavigator.SelectDescendants(String name, String namespaceURI, Boolean matchSelf)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectDescendantsXPathNodeTypeBoolean">
            <summary>Задает stub XPathNavigator.SelectDescendants(XPathNodeType type, Boolean matchSelf)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
            <summary>Задает заглушка XPathNavigator.SelectSingleNode(XPathExpression expression)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectSingleNode(System.String)">
            <summary>Задает заглушка XPathNavigator.SelectSingleNode(String xpath)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>Задает заглушка XPathNavigator.SelectSingleNode(String xpath, IXmlNamespaceResolver resolver)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectSingleNodeString">
            <summary>Задает stub XPathNavigator.SelectSingleNode(String xpath)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectSingleNodeStringIXmlNamespaceResolver">
            <summary>Задает stub XPathNavigator.SelectSingleNode(String xpath, IXmlNamespaceResolver resolver)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectSingleNodeXPathExpression">
            <summary>Задает stub XPathNavigator.SelectSingleNode(XPathExpression expression)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectString">
            <summary>Задает stub XPathNavigator.Select(String xpath)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectStringIXmlNamespaceResolver">
            <summary>Задает stub XPathNavigator.Select(String xpath, IXmlNamespaceResolver resolver)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SelectXPathExpression">
            <summary>Задает stub XPathNavigator.Select(XPathExpression expr)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SetTypedValue(System.Object)">
            <summary>Задает заглушка XPathNavigator.SetTypedValue(Object typedValue)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SetTypedValueObject">
            <summary>Задает stub XPathNavigator.SetTypedValue(Object typedValue)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SetValue(System.String)">
            <summary>Задает заглушка XPathNavigator.SetValue(String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SetValueString">
            <summary>Задает stub XPathNavigator.SetValue(String value)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ToString">
            <summary>Задает заглушка XPathNavigator.ToString()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ToString01">
            <summary>Задает stub XPathNavigator.ToString()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.TypedValueGet">
            <summary>Задает stub XPathNavigator.get_TypedValue()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.UnderlyingObjectGet">
            <summary>Задает stub XPathNavigator.get_UnderlyingObject()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAs(System.Type)">
            <summary>Задает заглушка XPathItem.ValueAs(Type returnType)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>Задает заглушка XPathNavigator.ValueAs(Type returnType, IXmlNamespaceResolver nsResolver)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsBooleanGet">
            <summary>Задает stub XPathNavigator.get_ValueAsBoolean()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsDateTimeGet">
            <summary>Задает stub XPathNavigator.get_ValueAsDateTime()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsDoubleGet">
            <summary>Задает stub XPathNavigator.get_ValueAsDouble()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsIntGet">
            <summary>Задает stub XPathNavigator.get_ValueAsInt()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsLongGet">
            <summary>Задает stub XPathNavigator.get_ValueAsLong()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsType">
            <summary>Задает stub XPathItem.ValueAs(Type returnType)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsTypeIXmlNamespaceResolver">
            <summary>Задает stub XPathNavigator.ValueAs(Type returnType, IXmlNamespaceResolver nsResolver)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueGet">
            <summary>Задает stub HtmlNodeNavigator.get_Value()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueTypeGet">
            <summary>Задает stub XPathNavigator.get_ValueType()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.WriteSubtree(System.Xml.XmlWriter)">
            <summary>Задает заглушка XPathNavigator.WriteSubtree(XmlWriter writer)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.WriteSubtreeXmlWriter">
            <summary>Задает stub XPathNavigator.WriteSubtree(XmlWriter writer)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.XmlLangGet">
            <summary>Задает stub HtmlNodeNavigator.get_XmlLang()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.XmlTypeGet">
            <summary>Задает stub XPathNavigator.get_XmlType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.BaseURI">
            <summary>Задает stub HtmlNodeNavigator.get_BaseURI()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.CanEdit">
            <summary>Задает stub XPathNavigator.get_CanEdit()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.HasAttributes">
            <summary>Задает stub HtmlNodeNavigator.get_HasAttributes()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.HasChildren">
            <summary>Задает stub HtmlNodeNavigator.get_HasChildren()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InnerXml">
            <summary>Задает stub XPathNavigator.get_InnerXml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.IsEmptyElement">
            <summary>Задает stub HtmlNodeNavigator.get_IsEmptyElement()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.LocalName">
            <summary>Задает stub HtmlNodeNavigator.get_LocalName()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Name">
            <summary>Задает stub HtmlNodeNavigator.get_Name()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.NameTable">
            <summary>Задает stub HtmlNodeNavigator.get_NameTable()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.NamespaceURI">
            <summary>Задает stub HtmlNodeNavigator.get_NamespaceURI()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.NodeType">
            <summary>Задает stub HtmlNodeNavigator.get_NodeType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.OuterXml">
            <summary>Задает stub XPathNavigator.get_OuterXml()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Prefix">
            <summary>Задает stub HtmlNodeNavigator.get_Prefix()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.SchemaInfo">
            <summary>Задает stub XPathNavigator.get_SchemaInfo()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.TypedValue">
            <summary>Задает stub XPathNavigator.get_TypedValue()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.UnderlyingObject">
            <summary>Задает stub XPathNavigator.get_UnderlyingObject()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.Value">
            <summary>Задает stub HtmlNodeNavigator.get_Value()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsBoolean">
            <summary>Задает stub XPathNavigator.get_ValueAsBoolean()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsDateTime">
            <summary>Задает stub XPathNavigator.get_ValueAsDateTime()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsDouble">
            <summary>Задает stub XPathNavigator.get_ValueAsDouble()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsInt">
            <summary>Задает stub XPathNavigator.get_ValueAsInt()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueAsLong">
            <summary>Задает stub XPathNavigator.get_ValueAsLong()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.ValueType">
            <summary>Задает stub XPathNavigator.get_ValueType()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.XmlLang">
            <summary>Задает stub HtmlNodeNavigator.get_XmlLang()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlNodeNavigator.XmlType">
            <summary>Задает stub XPathNavigator.get_XmlType()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.StubHtmlWeb">
            <summary>Тип заглушки HtmlAgilityPack.HtmlWeb</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlWeb.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlWeb.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHtmlWeb</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWeb.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWeb.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWeb.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.StubHtmlWebException">
            <summary>Тип заглушки HtmlAgilityPack.HtmlWebException</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlWebException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlWebException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubHtmlWebException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlWebException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubHtmlWebException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlWebException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlWebException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlWebException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlWebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlWebException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlWebException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlWebException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlWebException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHtmlWebException</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlWebException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlWebException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlWebException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlWebException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubHtmlWebException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubHtmlWebException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWebException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWebException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWebException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWebException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWebException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWebException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWebException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubHtmlWebException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.StubIPermissionHelper">
            <summary>Тип заглушки HtmlAgilityPack.IPermissionHelper</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubIPermissionHelper.#ctor">
            <summary>Инициализирует новый экземпляр type StubIPermissionHelper</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubIPermissionHelper.GetIsDnsAvailable">
            <summary>Задает stub IPermissionHelper.GetIsDnsAvailable()</summary>
        </member>
        <member name="F:HtmlAgilityPack.Fakes.StubIPermissionHelper.GetIsRegistryAvailable">
            <summary>Задает stub IPermissionHelper.GetIsRegistryAvailable()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubIPermissionHelper.hap::HtmlAgilityPack#IPermissionHelper#GetIsDnsAvailable">
            <summary>Задает заглушка IPermissionHelper.GetIsDnsAvailable()</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubIPermissionHelper.hap::HtmlAgilityPack#IPermissionHelper#GetIsRegistryAvailable">
            <summary>Задает заглушка IPermissionHelper.GetIsRegistryAvailable()</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.StubMixedCodeDocument">
            <summary>Тип заглушки HtmlAgilityPack.MixedCodeDocument</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubMixedCodeDocument.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubMixedCodeDocument.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMixedCodeDocument</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubMixedCodeDocument.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubMixedCodeDocument.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubMixedCodeDocument.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:HtmlAgilityPack.Fakes.StubPermissionHelper">
            <summary>Тип заглушки HtmlAgilityPack.PermissionHelper</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubPermissionHelper.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:HtmlAgilityPack.Fakes.StubPermissionHelper.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPermissionHelper</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubPermissionHelper.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubPermissionHelper.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:HtmlAgilityPack.Fakes.StubPermissionHelper.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
    </members>
</doc>
